!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ADD_ELEMENT	myalarm.c	381;"	d	file:
ADD_ELEMENT	palarm.c	348;"	d	file:
ASCII_FTP_TRANSFER_TYPE	myftpc.h	/^  ASCII_FTP_TRANSFER_TYPE$/;"	e	enum:__anon2
ASCII_UPPER_CASE_FILE_NAME_CORRECTION	myftpc.h	260;"	d
AlrmHandler	main2.c	/^static void AlrmHandler(int Signal) {$/;"	f	file:
AlrmHandler	mybwsp.c	/^static void AlrmHandler (int Signal) {$/;"	f	file:
BINARY_FTP_TRANSFER_TYPE	myftpc.h	/^  BINARY_FTP_TRANSFER_TYPE, $/;"	e	enum:__anon2
BLOTCODE_FILES	mybws.c	24;"	d	file:
BLOTCODE_FILES	mybws.h	26;"	d
BLOTCODE_FILES	mybwsp.c	23;"	d	file:
BLOTCODE_FILES	mybwsp.h	20;"	d
BLOT_CONTEXT	mybws.h	/^struct BLOT_CONTEXT {$/;"	s
BSEARCH_LOOP	myalarm.c	293;"	d	file:
BSEARCH_LOOP	palarm.c	260;"	d	file:
BSearchByAlarmEpochTime	myalarm.c	/^static int BSearchByAlarmEpochTime (time_t alarmEpochTime, pthread_t thatPthread,$/;"	f	file:
BSearchByAlarmEpochTime	mypalarm.c	/^static int BSearchByAlarmEpochTime (time_t alarmEpochTime,$/;"	f	file:
BSearchByAlarmEpochTime	palarm.c	/^static int BSearchByAlarmEpochTime (time_t alarmEpochTime, pthread_t thatPthread,$/;"	f	file:
BSearchByPthread	myalarm.c	/^static int BSearchByPthread (pthread_t thatPthread, int *a_top) {$/;"	f	file:
BSearchByPthread	mypalarm.c	/^static int BSearchByPthread (pthread_t thatPthread,$/;"	f	file:
BSearchByPthread	palarm.c	/^static int BSearchByPthread (pthread_t thatPthread, int *a_top) {$/;"	f	file:
BSearchEventCounter	myprint2.c	/^static int BSearchEventCounter ($/;"	f	file:
BSearchNamedUsersGroup	myauth.c	/^static int BSearchNamedUsersGroup ($/;"	f	file:
BSearchPermissionsPathNode	myauth.c	/^static int BSearchPermissionsPathNode (const struct PERMISSIONS_TREE *ap_permissionsTree, $/;"	f	file:
BSearchUser	myauth.c	/^static int BSearchUser (const struct USERS *ap_users, $/;"	f	file:
BSearchUserInGroup	myauth.c	/^static int BSearchUserInGroup (const struct USERS_GROUP *ap_usersGroup, $/;"	f	file:
BlotPouet	blotbidon.c	/^int BlotPouet (void *g_executionStuff,$/;"	f
BlotTruc	blotbidon.c	/^int BlotTruc (void *g_executionStuff,$/;"	f
CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC	myauth.c	/^struct CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC {$/;"	s	file:
CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC_STUFF	myauth.h	/^  *CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC_STUFF ;$/;"	t	typeref:struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC
CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	myauth.c	/^struct CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC {$/;"	s	file:
CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC_STUFF	myauth.h	/^  *CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC_STUFF ;$/;"	t	typeref:struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC
CLIENT_SESSION_LOG_EVENT_ID	mybwsp.c	/^  CLIENT_SESSION_LOG_EVENT_ID,$/;"	e	enum:__anon7	file:
CONFIG_FILE_PARAMETERS	mybwsp.c	/^struct CONFIG_FILE_PARAMETERS {$/;"	s	file:
CONX_ACK_MMTP_PRIMITIVE_ID	mymmtpc.c	43;"	d	file:
CONX_ACK_PARSING	mymmtpc.c	/^struct CONX_ACK_PARSING {$/;"	s	file:
CONX_NACK_MMTP_PRIMITIVE_ID	mymmtpc.c	44;"	d	file:
CONX_NACK_PARSING	mymmtpc.c	/^struct CONX_NACK_PARSING {$/;"	s	file:
CONX_REQ_MMTP_PRIMITIVE_ID	mymmtpc.c	42;"	d	file:
CONX_REQ_PARSING	mymmtpc.c	/^struct CONX_REQ_PARSING {$/;"	s	file:
CheckAuthorizationsALaApache	myauth.c	/^int CheckAuthorizationsALaApache ($/;"	f
CheckCompletionFtpCommandStatusLines	myftpc.c	/^static int CheckCompletionFtpCommandStatusLines ($/;"	f	file:
CheckCompletionHttpRequestLines	mywssk.c	/^int CheckCompletionHttpRequestLines ($/;"	f
CheckCompletionHttpRequestLines	wssk.c	/^int CheckCompletionHttpRequestLines ($/;"	f
CheckHtmlServerBlotsTemplatePathName	mybwsp.c	/^int CheckHtmlServerBlotsTemplatePathName ($/;"	f
CheckReadingFtpCommandStatus	myftpc.c	/^static int CheckReadingFtpCommandStatus ($/;"	f	file:
CheckReadingHttpRequest	mywssk.c	/^static int CheckReadingHttpRequest ($/;"	f	file:
CheckReadingHttpRequest	wssk.c	/^static int CheckReadingHttpRequest ($/;"	f	file:
CheckReadingMmtpPrimitive	mymmtpc.c	/^static int CheckReadingMmtpPrimitive (const char *dataBufferPtr, $/;"	f	file:
CheckStack	checkstack.c	/^void CheckStack (const char *info) {$/;"	f
ConstructConxAckMmtpPrimitive	mymmtpc.c	/^static void ConstructConxAckMmtpPrimitive (char *mmtpPrimitiveBufferPtr, $/;"	f	file:
ConstructConxNackMmtpPrimitive	mymmtpc.c	/^static void ConstructConxNackMmtpPrimitive (char *mmtpPrimitiveBufferPtr, $/;"	f	file:
ConstructConxReqMmtpPrimitive	mymmtpc.c	/^static void ConstructConxReqMmtpPrimitive ($/;"	f	file:
ConstructDataMsgMmtpPrimitive	mymmtpc.c	/^static void ConstructDataMsgMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructDcnxAckMmtpPrimitive	mymmtpc.c	/^static void ConstructDcnxAckMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructDcnxReqMmtpPrimitive	mymmtpc.c	/^static void ConstructDcnxReqMmtpPrimitive (char *mmtpPrimitiveBufferPtr, $/;"	f	file:
ConstructErrIndMmtpPrimitive	mymmtpc.c	/^static void ConstructErrIndMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructPrscMsgMmtpPrimitive	mymmtpc.c	/^static void ConstructPrscMsgMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructSrvcMsgMmtpPrimitive	mymmtpc.c	/^static void ConstructSrvcMsgMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructStartAckMmtpPrimitive	mymmtpc.c	/^static void ConstructStartAckMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructStartNackMmtpPrimitive	mymmtpc.c	/^static void ConstructStartNackMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructStartReqMmtpPrimitive	mymmtpc.c	/^static void ConstructStartReqMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructSyncAckMmtpPrimitive	mymmtpc.c	/^static void ConstructSyncAckMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
ConstructSyncReqMmtpPrimitive	mymmtpc.c	/^static void ConstructSyncReqMmtpPrimitive (char *mmtpPrimitiveBufferPtr, size_t mmtpPrimitiveBufferSize,$/;"	f	file:
DATA_MSG_MMTP_PRIMITIVE_ID	mymmtpc.c	50;"	d	file:
DATA_MSG_PARSING	mymmtpc.c	/^struct DATA_MSG_PARSING {$/;"	s	file:
DCNX_ACK_MMTP_PRIMITIVE_ID	mymmtpc.c	46;"	d	file:
DCNX_ACK_PARSING	mymmtpc.c	/^struct DCNX_ACK_PARSING {$/;"	s	file:
DCNX_REQ_MMTP_PRIMITIVE_ID	mymmtpc.c	45;"	d	file:
DCNX_REQ_PARSING	mymmtpc.c	/^struct DCNX_REQ_PARSING {$/;"	s	file:
DEEP_BLOCKING_FOR_RESPONSE_MMTP_PRIMITIVE_READING_MODE	mymmtpc.c	/^  DEEP_BLOCKING_FOR_RESPONSE_MMTP_PRIMITIVE_READING_MODE,$/;"	e	enum:__anon13	file:
DEEP_BLOCKING__ACCESS_MODE	myts.h	/^  DEEP_BLOCKING__ACCESS_MODE$/;"	e	enum:__anon9
DEFAULT_HANDLING_MYWSSK_SESSION_MANAGEMENT	mywssk.h	/^  DEFAULT_HANDLING_MYWSSK_SESSION_MANAGEMENT,$/;"	e	enum:__anon20
DEFAULT_HANDLING_MYWSSK_SESSION_MANAGEMENT	wssk.h	/^  DEFAULT_HANDLING_MYWSSK_SESSION_MANAGEMENT,$/;"	e	enum:__anon23
DUMP_HTTP_REQUEST_FUNCTION_STUFF	mywssk.c	/^struct DUMP_HTTP_REQUEST_FUNCTION_STUFF {$/;"	s	file:
DUMP_HTTP_REQUEST_FUNCTION_STUFF	wssk.c	/^struct DUMP_HTTP_REQUEST_FUNCTION_STUFF {$/;"	s	file:
DestroyMyAlarms	myalarm.c	/^int DestroyMyAlarms() {$/;"	f
DestroyPthreadAlarms	mypalarm.c	/^int DestroyPthreadAlarms() {$/;"	f
DisplayUsage	mybwsp.c	/^static void DisplayUsage (const char *argv0) {$/;"	f	file:
DisplayUsage	synchloic.c	/^static void DisplayUsage (const char *argv0) {$/;"	f	file:
DisplayUsage	synchsrc.c	/^static void DisplayUsage (const char *argv0) {$/;"	f	file:
DumpHttpRequest	mywssk.c	/^static int DumpHttpRequest ($/;"	f	file:
DumpHttpRequest	wssk.c	/^static int DumpHttpRequest ($/;"	f	file:
ENFORCED_CONTENT_HTML_PROTECTED_COPY	mybws.c	577;"	d	file:
ENFORCED_CONTENT_HTML_PROTECTED_COPY	mybws.c	600;"	d	file:
EQUAL_PEER_RANK	mymmtpc.c	/^  EQUAL_PEER_RANK,$/;"	e	enum:__anon11	file:
ERR_IND_MMTP_PRIMITIVE_ID	mymmtpc.c	54;"	d	file:
ERR_IND_PARSING	mymmtpc.c	/^struct ERR_IND_PARSING {$/;"	s	file:
ESUCCESS	mybwsp.c	10;"	d	file:
EXECUTE_PERMISSION_FLAG	myauth.c	208;"	d	file:
ExtractNumericalField8	mymmtpc.c	/^static int ExtractNumericalField8 (const char *field, size_t length) {$/;"	f	file:
FILE_DATA_FLOW_LOCAL_TYPE	myftpc.c	/^  FILE_DATA_FLOW_LOCAL_TYPE,$/;"	e	enum:__anon4	file:
FORCE_CLOSE_MYWSSK_SESSION_MANAGEMENT	mywssk.h	/^  FORCE_CLOSE_MYWSSK_SESSION_MANAGEMENT$/;"	e	enum:__anon20
FORCE_CLOSE_MYWSSK_SESSION_MANAGEMENT	wssk.h	/^  FORCE_CLOSE_MYWSSK_SESSION_MANAGEMENT$/;"	e	enum:__anon23
FREE_PEER_RANK	mymmtpc.c	/^  FREE_PEER_RANK$/;"	e	enum:__anon11	file:
FTP_COMMAND_STATUS_READING	myftpc.c	/^struct FTP_COMMAND_STATUS_READING {$/;"	s	file:
FtpLogCommandStatus	main.c	/^FtpLogCommandStatus ($/;"	f
GetCorrectedFileNames	myftpc.c	/^static int GetCorrectedFileNames (const char *serverList,$/;"	f	file:
GetMmtpRefusalOrDisconnectionReasonOfficialDescription	mymmtpc.c	/^static int GetMmtpRefusalOrDisconnectionReasonOfficialDescription ($/;"	f	file:
GetResponse	mybws.c	/^static int GetResponse ($/;"	f	file:
HOST_TO_LOCAL_DATA_FLOW_DIRECTION	myftpc.c	/^  HOST_TO_LOCAL_DATA_FLOW_DIRECTION,$/;"	e	enum:__anon5	file:
HOT_WRITING__BASIC_OPEN_FILE_MODE	myrwf.h	/^	HOT_WRITING__BASIC_OPEN_FILE_MODE$/;"	e	enum:__anon18
HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF	mybwsp.h	/^struct HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF {$/;"	s
HTML_SERVER_BLOT_FUNCTIONS_LIBRARY	mybwsp.h	/^struct HTML_SERVER_BLOT_FUNCTIONS_LIBRARY {$/;"	s
HTML_SERVER_CLIENT_HANDLER	mybwsp.c	/^struct HTML_SERVER_CLIENT_HANDLER {$/;"	s	file:
HTTP_REQUEST_READING	mywssk.c	/^struct HTTP_REQUEST_READING {$/;"	s	file:
HTTP_REQUEST_READING	wssk.c	/^struct HTTP_REQUEST_READING {$/;"	s	file:
HandleClientConnection	mybwsp.c	/^static void *HandleClientConnection (void *ra_handler) { $/;"	f	file:
IPV4_DOTTED_DECIMAL_NOTATION_MAX_LENGTH	myrwn.h	101;"	d
InitBlotFunctions2ExecutionStuff	blotbidon.c	/^int InitBlotFunctions2ExecutionStuff (void **azg_cFunctionsExecutionStuff) {$/;"	f
InitCheckAuthorizations	myauth.c	/^static int InitCheckAuthorizations (const char *p_usersFilePathName,$/;"	f	file:
InitCheckAuthorizationsALaApacheDynamic	myauth.c	/^int InitCheckAuthorizationsALaApacheDynamic ($/;"	f
InitCheckAuthorizationsALaApacheStatic	myauth.c	/^int InitCheckAuthorizationsALaApacheStatic ($/;"	f
InitEnhancedReading	myrw.c	/^int InitEnhancedReading (MYRW_ENHANCED_READING_STUFF *azh_enhancedReadingStuff,$/;"	f
InitHtmlServerBlotsPrivateStuff	blotbidon.c	/^int InitHtmlServerBlotsPrivateStuff ($/;"	f
InitMyAlarms	myalarm.c	/^int InitMyAlarms(void) {$/;"	f
InitMyPrint2	myprint2.c	/^int InitMyPrint2 (char topProcessFlag, $/;"	f
InitMybwsRespondDynamicStuff	mybws.c	/^int InitMybwsRespondDynamicStuff ($/;"	f
InitMybwsRespondStaticStuff	mybws.c	/^int InitMybwsRespondStaticStuff ($/;"	f
InitPAlarms	palarm.c	/^int InitPAlarms(void) {$/;"	f
InitPthreadAlarms	mypalarm.c	/^int InitPthreadAlarms() {$/;"	f
InternalLogLine	myprint2.c	/^static int InternalLogLine (int logSeverity, int logEventId, $/;"	f	file:
InternalPrint2	myprint2.c	/^static int InternalPrint2 (char newLineFlag, char *c_localTextBuffer, size_t outLength) {$/;"	f	file:
LIGHT_BLOCKING_FOR_DATA_MMTP_PRIMITIVE_READING_MODE	mymmtpc.c	/^  LIGHT_BLOCKING_FOR_DATA_MMTP_PRIMITIVE_READING_MODE,$/;"	e	enum:__anon13	file:
LIGHT_BLOCKING__ACCESS_MODE	myts.h	/^  LIGHT_BLOCKING__ACCESS_MODE,$/;"	e	enum:__anon9
LISTENER_LOG_EVENT_ID	mybwsp.c	/^  LISTENER_LOG_EVENT_ID,$/;"	e	enum:__anon7	file:
LOCAL_TO_HOST_DATA_FLOW_DIRECTION	myftpc.c	/^  LOCAL_TO_HOST_DATA_FLOW_DIRECTION$/;"	e	enum:__anon5	file:
LOGICAL_CONNECTION_STUFF_STATUS	myftpc.c	/^  LOGICAL_CONNECTION_STUFF_STATUS \/\/ Session open ; FTP server accepted our user $/;"	e	enum:__anon3	file:
LOGICAL_CONNECTION_STUFF_STATUS	mymmtpc.c	/^  LOGICAL_CONNECTION_STUFF_STATUS,$/;"	e	enum:__anon10	file:
LOG_ERROR	myprint2.h	/^  LOG_ERROR  $/;"	e	enum:__anon22
LOG_EVENT_COUNTER	myprint2.c	/^struct LOG_EVENT_COUNTER {$/;"	s	file:
LOG_HEADER_LENGTH	myprint2.c	272;"	d	file:
LOG_INFO	myprint2.h	/^  LOG_INFO,$/;"	e	enum:__anon22
LOG_WARNING	myprint2.h	/^  LOG_WARNING,$/;"	e	enum:__anon22
LogPreservationAction	myprint2.c	/^static int LogPreservationAction (char *c_localTextBuffer, int eventLogLineLength,$/;"	f	file:
MAX_CLIENT_HANDLERS_NUMBER	mybwsp.c	697;"	d	file:
MAX_LOG_EVENT_COUNTERS_NUMBER	myprint2.c	37;"	d	file:
MMTP_BUSINESS_DATA_MAX_LENGTH	mymmtpc.h	48;"	d
MMTP_DATA_MSG_ID_VALIDATION	mymmtpc.h	/^union MMTP_DATA_MSG_ID_VALIDATION {$/;"	u
MMTP_EMPTY_DATA_MSG_ID24	mymmtpc.h	31;"	d
MMTP_OPTIONAL_ADMIN_DATA_MAX_LENGTH	mymmtpc.h	45;"	d
MMTP_PATH_IN	mymmtpc.h	/^  MMTP_PATH_IN, \/\/ client to server $/;"	e	enum:__anon6
MMTP_PATH_IN_CHECK_DATA_MSG_ID_FUNCTION	mymmtpc.h	/^typedef int (*MMTP_PATH_IN_CHECK_DATA_MSG_ID_FUNCTION) ($/;"	t
MMTP_PATH_IN_DATA_MSG_ID_VALIDATION	mymmtpc.h	/^struct MMTP_PATH_IN_DATA_MSG_ID_VALIDATION {$/;"	s
MMTP_PATH_OUT	mymmtpc.h	/^  MMTP_PATH_OUT \/\/ server to client $/;"	e	enum:__anon6
MMTP_PHYSICAL_CONNECTION_ERROR	mymmtpc.h	/^struct MMTP_PHYSICAL_CONNECTION_ERROR {$/;"	s
MMTP_PRIMITIVE_DIRECTION_IN	mymmtpc.c	/^  MMTP_PRIMITIVE_DIRECTION_IN,$/;"	e	enum:__anon12	file:
MMTP_PRIMITIVE_DIRECTION_OUT	mymmtpc.c	/^  MMTP_PRIMITIVE_DIRECTION_OUT$/;"	e	enum:__anon12	file:
MMTP_PRIMITIVE_PARSING	mymmtpc.c	/^union MMTP_PRIMITIVE_PARSING {$/;"	u	file:
MMTP_REFUSAL_OR_DISCONNECTION_REASON	mymmtpc.h	/^struct MMTP_REFUSAL_OR_DISCONNECTION_REASON {$/;"	s
MMTP_STANDARD_ADMIN_DATA	mymmtpc.h	/^struct MMTP_STANDARD_ADMIN_DATA {$/;"	s
MYBWS_RESPOND_CHECK_AUTHORIZATIONS_FUNCTION	mybws.h	/^typedef int (*MYBWS_RESPOND_CHECK_AUTHORIZATIONS_FUNCTION) ($/;"	t
MYBWS_RESPOND_CHECK_BLOTS_TEMPLATE_PATH_NAME_FUNCTION	mybws.h	/^typedef int (*MYBWS_RESPOND_CHECK_BLOTS_TEMPLATE_PATH_NAME_FUNCTION) ($/;"	t
MYBWS_RESPOND_DYNAMIC	mybws.c	/^struct MYBWS_RESPOND_DYNAMIC {$/;"	s	file:
MYBWS_RESPOND_DYNAMIC_STUFF	mybws.h	/^typedef struct MYBWS_RESPOND_DYNAMIC *MYBWS_RESPOND_DYNAMIC_STUFF ;$/;"	t	typeref:struct:MYBWS_RESPOND_DYNAMIC
MYBWS_RESPOND_STATIC	mybws.c	/^struct MYBWS_RESPOND_STATIC {$/;"	s	file:
MYBWS_RESPOND_STATIC_STUFF	mybws.h	/^typedef struct MYBWS_RESPOND_STATIC *MYBWS_RESPOND_STATIC_STUFF ;$/;"	t	typeref:struct:MYBWS_RESPOND_STATIC
MYFTPC	myftpc.c	/^struct MYFTPC {$/;"	s	file:
MYFTPC_LOG_COMMAND_STATUS_FUNCTION	myftpc.h	/^typedef int (*MYFTPC_LOG_COMMAND_STATUS_FUNCTION) ($/;"	t
MYFTPC_STUFF	myftpc.h	/^typedef struct MYFTPC *MYFTPC_STUFF ;$/;"	t	typeref:struct:MYFTPC
MYMMTPC	mymmtpc.c	/^struct MYMMTPC {$/;"	s	file:
MYMMTPC_STUFF	mymmtpc.h	/^typedef struct MYMMTPC *MYMMTPC_STUFF ; $/;"	t	typeref:struct:MYMMTPC
MYRW_CHECK_READ_DATA_FUNCTION	myrw.h	/^typedef int (*MYRW_CHECK_READ_DATA_FUNCTION) (const char *p_dataBuffer,$/;"	t
MYRW_ENHANCED_READING	myrw.c	/^struct MYRW_ENHANCED_READING {$/;"	s	file:
MYRW_ENHANCED_READING_STUFF	myrw.h	/^typedef struct MYRW_ENHANCED_READING *MYRW_ENHANCED_READING_STUFF ;$/;"	t	typeref:struct:MYRW_ENHANCED_READING
MYRW_ENHANCED_WRITING_STUFF	myrw.h	/^typedef struct MYRW_ENHANCED_WRITING *MYRW_ENHANCED_WRITING_STUFF ;$/;"	t	typeref:struct:MYRW_ENHANCED_WRITING
MYTS_ACCESS_MODE	myts.h	/^struct MYTS_ACCESS_MODE {$/;"	s
MYTS_ACCESS_MODE_CONTROL	myts.h	/^struct MYTS_ACCESS_MODE_CONTROL {$/;"	s
MYTS_CUSTOM_ALARM_FUNCTION	myts.h	/^typedef int (*MYTS_CUSTOM_ALARM_FUNCTION) (int seconds) ;$/;"	t
MYWSSKH	mywssk.c	/^struct MYWSSKH {$/;"	s	file:
MYWSSKH	wssk.c	/^struct MYWSSKH {$/;"	s	file:
MYWSSKH_STUFF	mywssk.h	/^typedef struct MYWSSKH *MYWSSKH_STUFF ;$/;"	t	typeref:struct:MYWSSKH
MYWSSKH_STUFF	wssk.h	/^typedef struct MYWSSKH *MYWSSKH_STUFF ;$/;"	t	typeref:struct:MYWSSKH
MYWSSKL	mywssk.c	/^struct MYWSSKL {$/;"	s	file:
MYWSSKL	wssk.c	/^struct MYWSSKL {$/;"	s	file:
MYWSSKL_STUFF	mywssk.h	/^typedef struct MYWSSKL *MYWSSKL_STUFF ;$/;"	t	typeref:struct:MYWSSKL
MYWSSKL_STUFF	wssk.h	/^typedef struct MYWSSKL *MYWSSKL_STUFF ;$/;"	t	typeref:struct:MYWSSKL
MY_MMTP_PRIMITIVE_BUFFER_SIZE	mymmtpc.c	908;"	d	file:
MY_PTHREAD_COMPARE	myalarm.c	288;"	d	file:
MY_PTHREAD_COMPARE	mypalarm.c	266;"	d	file:
MY_PTHREAD_COMPARE	palarm.c	256;"	d	file:
MY_RELEASE_VERSION	mybwsp.c	48;"	d	file:
ManagerPthreadRoutine	palarm.c	/^static void *ManagerPthreadRoutine (void *ra_nullHandler) {$/;"	f	file:
MyAccessCheckTimeout	myaccess.c	/^char MyAccessCheckTimeout (int accessMode, int c_blockingAccessModeDeadline,$/;"	f
MyAccessPrepare	myaccess.c	/^int MyAccessPrepare (int accessMode, int c_blockingAccessModeDeadline,$/;"	f
MyAccessResetDeadline	myaccess.c	/^void MyAccessResetDeadline (int accessMode, int c_blockingAccessModeDeadline,$/;"	f
MyAlarm	myaccess.c	/^static int MyAlarm (int seconds) {$/;"	f	file:
MyAlarm	myalarm.c	/^int MyAlarm (int seconds) {$/;"	f
MyBindAndListen	myrwn.c	/^int MyBindAndListen (int tcpIpSocketFd, int tcpPort, int backlog) {$/;"	f
MyCheckFunction	teststring.c	/^static int MyCheckFunction ($/;"	f	file:
MyGetSmallDump	mymmtpc.c	/^static char *MyGetSmallDump (const char *bodyPtr, size_t bodyLength) {$/;"	f	file:
MyLogLine	myprint2.c	/^int MyLogLine (int logSeverity, int logEventId, const char *lineFormat,...) {$/;"	f
MyPrint2	myprint2.c	/^int MyPrint2 (char newLineFlag, const char *p_outFormat,...) {$/;"	f
MyProtectedAccept	myrwn.c	/^int MyProtectedAccept (int listeningTcpIpSocketFd, $/;"	f
MyProtectedConnect	c.c	/^int MyProtectedConnect (int tcpIpSocketFd, const char *host, int tcpPort) { $/;"	f
MyProtectedSetProcessFileLock	myrwf.c	/^int MyProtectedSetProcessFileLock (int fileDescriptor, short int lockType, $/;"	f
MyPthreadAlarm	mypalarm.c	/^int MyPthreadAlarm (int seconds) {$/;"	f
MySignalHandler	synchloic.c	/^static void MySignalHandler(int sig) {$/;"	f	file:
MySignalHandler	synchsrc.c	/^static void MySignalHandler(int sig) {$/;"	f	file:
MybwsRespondPage	mybws.c	/^int MybwsRespondPage ($/;"	f
MyftpcCd	myftpc.c	/^int MyftpcCd (MYFTPC_STUFF myftpcStuff, const char *directoryName, $/;"	f
MyftpcCloseDataFlowListener	myftpc.c	/^static int MyftpcCloseDataFlowListener (struct MYFTPC *a_connection) {$/;"	f	file:
MyftpcConnect	myftpc.c	/^int MyftpcConnect (MYFTPC_STUFF *az_myftpcStuff, $/;"	f
MyftpcDelete	myftpc.c	/^int MyftpcDelete (MYFTPC_STUFF myftpcStuff, const char *name, $/;"	f
MyftpcDisconnect	myftpc.c	/^int MyftpcDisconnect (MYFTPC_STUFF x_myftpcStuff) { $/;"	f
MyftpcGet	myftpc.c	/^int MyftpcGet (MYFTPC_STUFF myftpcStuff, $/;"	f
MyftpcInitDataFlowListener	myftpc.c	/^static int MyftpcInitDataFlowListener (struct MYFTPC *a_connection,$/;"	f	file:
MyftpcLs	myftpc.c	/^int MyftpcLs (MYFTPC_STUFF myftpcStuff, const char *n_filter, int corrections,$/;"	f
MyftpcMaintainConnection	myftpc.c	/^int MyftpcMaintainConnection (MYFTPC_STUFF myftpcStuff) { $/;"	f
MyftpcNoop	myftpc.c	/^int MyftpcNoop (MYFTPC_STUFF myftpcStuff) { $/;"	f
MyftpcProcessDataFlow	myftpc.c	/^static int MyftpcProcessDataFlow (struct MYFTPC *a_connection,$/;"	f	file:
MyftpcPut	myftpc.c	/^int MyftpcPut (MYFTPC_STUFF myftpcStuff, $/;"	f
MyftpcReadCommandStatus	myftpc.c	/^static int MyftpcReadCommandStatus (struct MYFTPC *a_connection, int *a_commandStatus) {$/;"	f	file:
MyftpcRename	myftpc.c	/^int MyftpcRename (MYFTPC_STUFF myftpcStuff, const char *oldName, const char *newName, $/;"	f
MyftpcSetTransferType	myftpc.c	/^int MyftpcSetTransferType (MYFTPC_STUFF myftpcStuff, int transferType) { $/;"	f
MyftpcWriteCommand	myftpc.c	/^static int MyftpcWriteCommand (struct MYFTPC *a_connection, $/;"	f	file:
MymmtpcAskNormalDisconnection	mymmtpc.c	/^int MymmtpcAskNormalDisconnection (MYMMTPC_STUFF connectionStuff) { $/;"	f
MymmtpcConnect	mymmtpc.c	/^int MymmtpcConnect (MYMMTPC_STUFF *az_connectionStuff, $/;"	f
MymmtpcDisconnect	mymmtpc.c	/^int MymmtpcDisconnect (MYMMTPC_STUFF x_connectionStuff) {$/;"	f
MymmtpcHandleAuxiliaryPrimitives	mymmtpc.c	/^int MymmtpcHandleAuxiliaryPrimitives (struct MYMMTPC *a_connection, $/;"	f
MymmtpcHandlePathInPrimitives	mymmtpc.c	/^static int MymmtpcHandlePathInPrimitives (struct MYMMTPC *a_connection,$/;"	f	file:
MymmtpcMaintainConnection	mymmtpc.c	/^int MymmtpcMaintainConnection (MYMMTPC_STUFF connectionStuff,$/;"	f
MymmtpcReactOnServerDisconnectionPrimitive	mymmtpc.c	/^static int MymmtpcReactOnServerDisconnectionPrimitive ($/;"	f	file:
MymmtpcReadMainPrimitive	mymmtpc.c	/^static int MymmtpcReadMainPrimitive ($/;"	f	file:
MymmtpcReceiveData	mymmtpc.c	/^int MymmtpcReceiveData (MYMMTPC_STUFF connectionStuff, time_t dataReceivingFiniteDeadline,$/;"	f
MymmtpcSendData	mymmtpc.c	/^int MymmtpcSendData (MYMMTPC_STUFF connectionStuff, $/;"	f
MymmtpcWritePrimitive	mymmtpc.c	/^static int MymmtpcWritePrimitive (struct MYMMTPC *a_connection, $/;"	f	file:
MytsCallAlarm	myts.c	/^static int MytsCallAlarm (int seconds) {$/;"	f	file:
MytsCheckTimeout	myts.c	/^char MytsCheckTimeout (const struct MYTS_ACCESS_MODE *ap_accessMode,$/;"	f
MytsClearAlarm	myts.c	/^int MytsClearAlarm (const struct MYTS_ACCESS_MODE *ap_accessMode) {$/;"	f
MytsSetAlarm	myts.c	/^int MytsSetAlarm (const struct MYTS_ACCESS_MODE *ap_accessMode,$/;"	f
MytsSetDeadline	myts.c	/^void MytsSetDeadline (const struct MYTS_ACCESS_MODE *ap_accessMode,$/;"	f
MywsskhHandleRequests	mywssk.c	/^int MywsskhHandleRequests (MYWSSKH_STUFF cx_mywsskhStuff,$/;"	f
MywsskhHandleRequests	wssk.c	/^int MywsskhHandleRequests (MYWSSKH_STUFF cx_mywsskhStuff,$/;"	f
MywssklAcceptRequest	mywssk.c	/^int MywssklAcceptRequest (MYWSSKL_STUFF mywssklStuff, int listeningDeadLine,$/;"	f
MywssklAcceptRequest	wssk.c	/^int MywssklAcceptRequest (MYWSSKL_STUFF mywssklStuff, int listeningDeadLine,$/;"	f
MywssklFreeListener	mywssk.c	/^int MywssklFreeListener (MYWSSKL_STUFF x_mywssklStuff) {$/;"	f
MywssklFreeListener	wssk.c	/^int MywssklFreeListener (MYWSSKL_STUFF x_mywssklStuff) {$/;"	f
MywssklInitListener	mywssk.c	/^int MywssklInitListener (MYWSSKL_STUFF *azc_mywssklStuff, int listeningPort,$/;"	f
MywssklInitListener	wssk.c	/^int MywssklInitListener (MYWSSKL_STUFF *azc_mywssklStuff, int listeningPort,$/;"	f
NAMED_USERS_GROUP	myauth.c	/^struct NAMED_USERS_GROUP {$/;"	s	file:
NAMED_USERS_GROUPS	myauth.c	/^struct NAMED_USERS_GROUPS {$/;"	s	file:
NON_BLOCKING_MMTP_PRIMITIVE_READING_MODE	mymmtpc.c	/^  NON_BLOCKING_MMTP_PRIMITIVE_READING_MODE, $/;"	e	enum:__anon13	file:
NON_BLOCKING__ACCESS_MODE	myts.h	/^  NON_BLOCKING__ACCESS_MODE,  $/;"	e	enum:__anon9
NOT_SO_BAD_BACKLOG	myrwn.h	77;"	d
NO_CONNECTION_STUFF_STATUS	myftpc.c	/^  NO_CONNECTION_STUFF_STATUS,$/;"	e	enum:__anon3	file:
NO_CONNECTION_STUFF_STATUS	mymmtpc.c	/^  NO_CONNECTION_STUFF_STATUS,$/;"	e	enum:__anon10	file:
NO__EXTRA_OPEN_FILE_FLAG1	myrwf.h	/^  NO__EXTRA_OPEN_FILE_FLAG1 = 0,$/;"	e	enum:__anon19
OVERFLOW_LOG_EVENT_ID	myprint2.c	27;"	d	file:
PATH_NODE_USERS_PERMISSION_LINE	myauth.c	/^struct PATH_NODE_USERS_PERMISSION_LINE {$/;"	s	file:
PERMISSIONS_PATH_NODE	myauth.c	/^struct PERMISSIONS_PATH_NODE {$/;"	s	file:
PERMISSIONS_TREE	myauth.c	/^struct PERMISSIONS_TREE {$/;"	s	file:
PHYSICAL_CONNECTION_STUFF_STATUS	myftpc.c	/^  PHYSICAL_CONNECTION_STUFF_STATUS, \/\/ Connected to FTP server$/;"	e	enum:__anon3	file:
PHYSICAL_CONNECTION_STUFF_STATUS	mymmtpc.c	/^  PHYSICAL_CONNECTION_STUFF_STATUS,$/;"	e	enum:__anon10	file:
POSSIBLY_BINARY__EXTRA_OPEN_FILE_FLAG1	myrwf.h	/^  POSSIBLY_BINARY__EXTRA_OPEN_FILE_FLAG1,$/;"	e	enum:__anon19
POSSIBLY_MAINTAIN_MYWSSK_SESSION_MANAGEMENT	mywssk.h	/^  POSSIBLY_MAINTAIN_MYWSSK_SESSION_MANAGEMENT,$/;"	e	enum:__anon20
POSSIBLY_MAINTAIN_MYWSSK_SESSION_MANAGEMENT	wssk.h	/^  POSSIBLY_MAINTAIN_MYWSSK_SESSION_MANAGEMENT,$/;"	e	enum:__anon23
POSSIBLY_TEXT__EXTRA_OPEN_FILE_FLAG1	myrwf.h	/^  POSSIBLY_TEXT__EXTRA_OPEN_FILE_FLAG1,$/;"	e	enum:__anon19
PRESERVE_LOG_EVENT_ID	myprint2.c	26;"	d	file:
PROGRAM_NAME	mybwsp.c	47;"	d	file:
PROGRAM_NAME	synchloic.c	15;"	d	file:
PROGRAM_NAME	synchsrc.c	15;"	d	file:
PROTECTED_CONNECT_ERRNO_INDICATES__CPU_HOGGING_CONDITION	myrwn.h	44;"	d
PROTECTED_OPEN_ERRNO_MEANS__BAD_CANDIDATE	myrwf.h	93;"	d
PROTECTED_OPEN_ERRNO_MEANS__FORBIDDEN	myrwf.h	88;"	d
PROTECTED_OPEN_ERRNO_MEANS__NOT_FOUND	myrwf.h	84;"	d
PRSC_MSG_MMTP_PRIMITIVE_ID	mymmtpc.c	56;"	d	file:
ParseMmtpPrimitive	mymmtpc.c	/^static int ParseMmtpPrimitive (const char *mmtpPrimitiveBufferPtr, $/;"	f	file:
PipeHandler	main2.c	/^static void PipeHandler(int Signal) {$/;"	f	file:
PreservedLogLine	myprint2.c	/^int PreservedLogLine (int logSeverity, int logEventId, unsigned long eventHash, $/;"	f
PreservedLogOverflow	myprint2.c	/^static int PreservedLogOverflow (char *c_localTextBuffer) {$/;"	f	file:
PreservedLogReset	myprint2.c	/^int PreservedLogReset (int logSeverity, int logEventId) {$/;"	f
ProtectedConnect	myrwn.c	/^int ProtectedConnect (int tcpIpSocketFd, const char *hostIpAddress, int tcpPort) {$/;"	f
ProtectedRead	myrw.c	/^int ProtectedRead (int fileDescriptor,$/;"	f
READING__BASIC_OPEN_FILE_MODE	myrwf.h	/^	READING__BASIC_OPEN_FILE_MODE,$/;"	e	enum:__anon18
READ_PERMISSION_FLAG	myauth.c	206;"	d	file:
REALLOC_ARRAY	myalarm.c	388;"	d	file:
REALLOC_ARRAY	palarm.c	355;"	d	file:
RELEASE_VERSION	synchloic.c	14;"	d	file:
RELEASE_VERSION	synchsrc.c	14;"	d	file:
REMOVE_ENTRY	myalarm.c	375;"	d	file:
REMOVE_ENTRY	palarm.c	342;"	d	file:
RESPOND_TO_HTTP_REQUEST_FUNCTION	mywssk.h	/^typedef int (*RESPOND_TO_HTTP_REQUEST_FUNCTION) ($/;"	t
RESPOND_TO_HTTP_REQUEST_FUNCTION	wssk.h	/^typedef int (*RESPOND_TO_HTTP_REQUEST_FUNCTION) ($/;"	t
ReadConfigFile	mybwsp.c	/^static int ReadConfigFile (const char *configFileName,$/;"	f	file:
RectifyDirectoryLocation	pathname.c	/^int RectifyDirectoryLocation (const char *p_location, char toPathNameFlag,$/;"	f
ReleaseBlotFunctions2ExecutionStuff	blotbidon.c	/^int ReleaseBlotFunctions2ExecutionStuff (void *cg_cFunctionsExecutionStuff) {$/;"	f
ReleaseCheckAuthorizationsALaApacheDynamic	myauth.c	/^int ReleaseCheckAuthorizationsALaApacheDynamic ($/;"	f
ReleaseCheckAuthorizationsALaApacheStatic	myauth.c	/^int ReleaseCheckAuthorizationsALaApacheStatic ($/;"	f
ReleaseHtmlServerBlotsPrivateStuff	blotbidon.c	/^int ReleaseHtmlServerBlotsPrivateStuff () {$/;"	f
ReleaseMybwsRespondDynamicStuff	mybws.c	/^int ReleaseMybwsRespondDynamicStuff (MYBWS_RESPOND_DYNAMIC_STUFF x_dynamicStuff) {$/;"	f
ReleaseMybwsRespondStaticStuff	mybws.c	/^int ReleaseMybwsRespondStaticStuff (MYBWS_RESPOND_STATIC_STUFF x_staticStuff) {$/;"	f
ReleaseNamedUsersGroups	myauth.c	/^static int ReleaseNamedUsersGroups ($/;"	f	file:
ReleasePermissionsTree	myauth.c	/^static int ReleasePermissionsTree (struct PERMISSIONS_TREE $/;"	f	file:
ReleaseUsers	myauth.c	/^static int ReleaseUsers (struct USERS *a_users) {$/;"	f	file:
ResetEnhancedReading	myrw.c	/^int ResetEnhancedReading (MYRW_ENHANCED_READING_STUFF enhancedReadingStuff) {$/;"	f
RespondToGarbage	mywssk.c	/^static int RespondToGarbage (const char *garbage, const size_t garbageLength,$/;"	f	file:
RespondToGarbage	wssk.c	/^static int RespondToGarbage (const char *garbage, const size_t garbageLength,$/;"	f	file:
SCHEDULE	myalarm.c	/^struct SCHEDULE {$/;"	s	file:
SCHEDULE	mypalarm.c	/^struct SCHEDULE {$/;"	s	file:
SCHEDULE	palarm.c	/^struct SCHEDULE {$/;"	s	file:
SCHEDULE_LINE	myalarm.c	/^struct SCHEDULE_LINE {$/;"	s	file:
SCHEDULE_LINE	mypalarm.c	/^struct SCHEDULE_LINE {$/;"	s	file:
SCHEDULE_LINE	palarm.c	/^struct SCHEDULE_LINE {$/;"	s	file:
SERVER_CONFIG_LOG_EVENT_ID	mybwsp.c	/^  SERVER_CONFIG_LOG_EVENT_ID,$/;"	e	enum:__anon7	file:
SRVC_MSG_MMTP_PRIMITIVE_ID	mymmtpc.c	55;"	d	file:
SRVC_MSG_PARSING	mymmtpc.c	/^struct SRVC_MSG_PARSING {$/;"	s	file:
START_ACK_MMTP_PRIMITIVE_ID	mymmtpc.c	48;"	d	file:
START_ACK_PARSING	mymmtpc.c	/^struct START_ACK_PARSING {$/;"	s	file:
START_LOG_EVENT_ID	mybwsp.c	/^  START_LOG_EVENT_ID,$/;"	e	enum:__anon7	file:
START_NACK_MMTP_PRIMITIVE_ID	mymmtpc.c	49;"	d	file:
START_NACK_PARSING	mymmtpc.c	/^struct START_NACK_PARSING {$/;"	s	file:
START_REQ_MMTP_PRIMITIVE_ID	mymmtpc.c	47;"	d	file:
START_REQ_PARSING	mymmtpc.c	/^struct START_REQ_PARSING {$/;"	s	file:
STDERR_FCT	c.c	133;"	d	file:
STDERR_FCT	c.c	31;"	d	file:
STDERR_FCT	pathname.c	10;"	d	file:
STDERR_FCT	pathname.c	50;"	d	file:
STRING_DATA_FLOW_LOCAL_TYPE	myftpc.c	/^  STRING_DATA_FLOW_LOCAL_TYPE$/;"	e	enum:__anon4	file:
SYNC_ACK_MMTP_PRIMITIVE_ID	mymmtpc.c	52;"	d	file:
SYNC_ACK_PARSING	mymmtpc.c	/^struct SYNC_ACK_PARSING {$/;"	s	file:
SYNC_REQ_MMTP_PRIMITIVE_ID	mymmtpc.c	51;"	d	file:
ScheduleHandlerMain	myalarm.c	/^static int ScheduleHandlerMain (void) {$/;"	f	file:
ScheduleHandlerPthreadMain	mypalarm.c	/^static int ScheduleHandlerPthreadMain () {$/;"	f	file:
ScheduleHandlerPthreadRoutine	myalarm.c	/^static void *ScheduleHandlerPthreadRoutine (void *ra_nullHandler) {$/;"	f	file:
ScheduleHandlerPthreadRoutine	mypalarm.c	/^static void *ScheduleHandlerPthreadRoutine (void *ra_nullHandler) {$/;"	f	file:
SearchNearestParent	myauth.c	/^static int SearchNearestParent (const struct PERMISSIONS_TREE *ap_permissionsTree, $/;"	f	file:
TCP_IP_SOCKET	myrwn.h	30;"	d
TERMINATION_LOG_EVENT_ID	mybwsp.c	/^  TERMINATION_LOG_EVENT_ID$/;"	e	enum:__anon7	file:
TO_PATH_NAME__PATHNAME_RECTIFICATION_RULE	pathname.h	/^  TO_PATH_NAME__PATHNAME_RECTIFICATION_RULE,$/;"	e	enum:__anon1
TO_PATH__PATHNAME_RECTIFICATION_RULE	pathname.h	/^  TO_PATH__PATHNAME_RECTIFICATION_RULE,$/;"	e	enum:__anon1
TermHandler	mybwsp.c	/^static void TermHandler (int Signal) {$/;"	f	file:
USER	myauth.c	/^struct USER {$/;"	s	file:
USERS	myauth.c	/^struct USERS {$/;"	s	file:
USERS_GROUP	myauth.c	/^struct USERS_GROUP {$/;"	s	file:
UpdateEventCounter	myprint2.c	/^static int UpdateEventCounter (int logSeverity, int logEventId, unsigned long eventHash,$/;"	f	file:
UpdateScheduleLine	myalarm.c	/^static int UpdateScheduleLine (pthread_t myPthread, char newAlarmFlag, time_t c_newAlarmEpochTime) { $/;"	f	file:
UpdateScheduleLine	mypalarm.c	/^static int UpdateScheduleLine (pthread_t myPthread, char newAlarmFlag, time_t c_newAlarmEpochTime) { $/;"	f	file:
UpdateScheduleLine	palarm.c	/^static int UpdateScheduleLine (pthread_t myPthread, char newAlarmFlag, time_t c_newAlarmEpochTime) { $/;"	f	file:
VMS_VERSION_1_SUFFIX_FILE_NAME_CORRECTION	myftpc.h	263;"	d
WAIT_LOG_EVENT_ID	mybwsp.c	/^  WAIT_LOG_EVENT_ID,$/;"	e	enum:__anon7	file:
WRITE_PERMISSION_FLAG	myauth.c	207;"	d	file:
WRITING__BASIC_OPEN_FILE_MODE	myrwf.h	/^	WRITING__BASIC_OPEN_FILE_MODE,$/;"	e	enum:__anon18
__MYALARM_H_INCLUDED	myalarm.h	4;"	d
__MYAUTH_H_INCLUDED__	myauth.h	5;"	d
__MYBWS_H_INCLUDED__	mybws.h	14;"	d
__MYFTPC_INCLUDED	myftpc.h	8;"	d
__MYHTMLSP_H_INCLUDED__	mybwsp.h	13;"	d
__MYMMTPC_H_INCLUDED__	mymmtpc.h	21;"	d
__MYPRINT2_H_INCLUDED	myprint2.h	11;"	d
__MYRWF_H_INCLUDED	myrwf.h	7;"	d
__MYRWN_H_INCLUDED	myrwn.h	10;"	d
__MYRW_H_INCLUDED	myrw.h	8;"	d
__MYTA_H_INCLUDED	myta.h	4;"	d
__MYTS_H_INCLUDED	myts.h	11;"	d
__MYWSSK_H_INCLUDED__	mywssk.h	11;"	d
__MYWSSK_H_INCLUDED__	wssk.h	11;"	d
__PALARM_H_INCLUDED	palarm.h	4;"	d
__PATHNAME_H_INCLUDED	pathname.h	5;"	d
accessFilePathName	mybwsp.c	/^  char accessFilePathName[256];$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
accessMode	myts.h	/^  int accessMode ; \/\/ NON_BLOCKING__ACCESS_MODE $/;"	m	struct:MYTS_ACCESS_MODE
adminDataLength	mymmtpc.c	/^  size_t adminDataLength ; \/\/ >= 0 number$/;"	m	struct:DATA_MSG_PARSING	file:
adminDataType2	mymmtpc.c	/^  char adminDataType2[2+1] ; \/\/ Printable character $/;"	m	struct:DATA_MSG_PARSING	file:
adminDataType2	mymmtpc.h	/^  char adminDataType2[2+1] ; $/;"	m	struct:MMTP_STANDARD_ADMIN_DATA
alarmDeliveryCorrection	myts.h	/^  int alarmDeliveryCorrection; \/\/ correction for alarm delivery$/;"	m	struct:MYTS_ACCESS_MODE_CONTROL
alarmEpochTime	myalarm.c	/^  time_t alarmEpochTime ;$/;"	m	struct:SCHEDULE_LINE	file:
alarmEpochTime	mypalarm.c	/^  time_t alarmEpochTime ;$/;"	m	struct:SCHEDULE_LINE	file:
alarmEpochTime	palarm.c	/^  time_t alarmEpochTime ;$/;"	m	struct:SCHEDULE_LINE	file:
alarmEpochTimesIndexCount	myalarm.c	/^  int alarmEpochTimesIndexCount ;\/\/ >=0 and <= count; $/;"	m	struct:SCHEDULE	file:
alarmEpochTimesIndexCount	mypalarm.c	/^  int alarmEpochTimesIndexCount ;\/\/ >=0 and <= count; $/;"	m	struct:SCHEDULE	file:
alarmEpochTimesIndexCount	palarm.c	/^  int alarmEpochTimesIndexCount ;\/\/ >=0 and <= count; $/;"	m	struct:SCHEDULE	file:
allocCount	myalarm.c	/^  int allocCount ; \/\/ >= 1 ; number of "physical" alarm lines in memory$/;"	m	struct:SCHEDULE	file:
allocCount	mypalarm.c	/^  int allocCount ; \/\/ >= 1 ; number of "physical" alarm lines in memory$/;"	m	struct:SCHEDULE	file:
allocCount	palarm.c	/^  int allocCount ; \/\/ >= 1 ; number of "physical" alarm lines in memory$/;"	m	struct:SCHEDULE	file:
authenticationData8	mymmtpc.c	/^  char authenticationData8[8+1] ; \/\/ Printable characters$/;"	m	struct:CONX_REQ_PARSING	file:
base	pr7.c	/^void *base ;$/;"	v
blotAbandonmentInfo	mybws.c	/^  struct BLOT_ABANDONMENT_INFO blotAbandonmentInfo ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	typeref:struct:MYBWS_RESPOND_DYNAMIC::BLOT_ABANDONMENT_INFO	file:
blotContext	mybws.c	/^  struct BLOT_CONTEXT blotContext ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	typeref:struct:MYBWS_RESPOND_DYNAMIC::BLOT_CONTEXT	file:
blotFunctions	mybwsp.h	/^  const struct BLOT_FUNCTION *blotFunctions;$/;"	m	struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY	typeref:struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY::BLOT_FUNCTION
blotsPrivateConfigParamValues	mybwsp.c	/^  struct MY_RECYCLABLE_STRINGS blotsPrivateConfigParamValues ;$/;"	m	struct:CONFIG_FILE_PARAMETERS	typeref:struct:CONFIG_FILE_PARAMETERS::MY_RECYCLABLE_STRINGS	file:
blotsTemplatesSuffixes	mybwsp.c	/^  struct MY_RECYCLABLE_PARAMETERS blotsTemplatesSuffixes ;$/;"	m	struct:CONFIG_FILE_PARAMETERS	typeref:struct:CONFIG_FILE_PARAMETERS::MY_RECYCLABLE_PARAMETERS	file:
buffer	myftpc.c	/^  char buffer[1024] ;$/;"	m	struct:FTP_COMMAND_STATUS_READING	file:
businessDataLength	mymmtpc.c	/^  size_t businessDataLength ; \/\/ >= 0 number$/;"	m	struct:DATA_MSG_PARSING	file:
c_authorization	mywssk.c	/^  struct HTTP_AUTHORIZATION c_authorization ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::HTTP_AUTHORIZATION	file:
c_authorization	wssk.c	/^  struct HTTP_AUTHORIZATION c_authorization ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::HTTP_AUTHORIZATION	file:
c_blotFunctionsLibrariesExecutionStuff	mybws.c	/^  BLOT_FUNCTIONS_LIBRARIES_EXECUTION_STUFF c_blotFunctionsLibrariesExecutionStuff;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
c_cacheLine	palarm.c	/^	struct SCHEDULE_LINE c_cacheLine ;$/;"	m	struct:__anon16	typeref:struct:__anon16::SCHEDULE_LINE	file:
c_challengesCount	myauth.c	/^  int c_challengesCount ;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC	file:
c_checkAuthStaticStuff	mybwsp.c	/^  CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC_STUFF c_checkAuthStaticStuff;$/;"	m	struct:__anon8	file:
c_commandSockFd	myftpc.c	/^  int c_commandSockFd ;$/;"	m	struct:MYFTPC	file:
c_commandSockFdEnhancedReadingStuff	myftpc.c	/^  MY_ENHANCED_READING_STUFF c_commandSockFdEnhancedReadingStuff ;$/;"	m	struct:MYFTPC	file:
c_commandSockFdEnhancedWritingStuff	myftpc.c	/^  MY_ENHANCED_WRITING_STUFF c_commandSockFdEnhancedWritingStuff ;$/;"	m	struct:MYFTPC	file:
c_commandSockLocalIpAddr	myftpc.c	/^  in_addr_t c_commandSockLocalIpAddr ; $/;"	m	struct:MYFTPC	file:
c_commandStatusReading	myftpc.c	/^  struct FTP_COMMAND_STATUS_READING c_commandStatusReading ;$/;"	m	struct:MYFTPC	typeref:struct:MYFTPC::FTP_COMMAND_STATUS_READING	file:
c_commandsEpochTime	myftpc.c	/^  time_t c_commandsEpochTime ;$/;"	m	struct:MYFTPC	file:
c_contentLength	mywssk.c	/^  size_t c_contentLength ;$/;"	m	struct:HTTP_REQUEST_READING	file:
c_contentLength	wssk.c	/^  size_t c_contentLength ;$/;"	m	struct:HTTP_REQUEST_READING	file:
c_copiedAuthentication	mybws.h	/^  struct HTTP_AUTHENTICATION c_copiedAuthentication;$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::HTTP_AUTHENTICATION
c_copiedAuthorization	mybws.h	/^  struct HTTP_AUTHORIZATION c_copiedAuthorization;$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::HTTP_AUTHORIZATION
c_copiedClientDottedDecimalIp	mybwsp.c	/^  struct MY_RECYCLABLE_STRING c_copiedClientDottedDecimalIp ; $/;"	m	struct:HTML_SERVER_CLIENT_HANDLER	typeref:struct:HTML_SERVER_CLIENT_HANDLER::MY_RECYCLABLE_STRING	file:
c_copiedCookieImplementation	mybws.h	/^  struct BROWSER_COOKIE_IMPLEMENTATION c_copiedCookieImplementation ;$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::BROWSER_COOKIE_IMPLEMENTATION
c_deadline	myts.h	/^  int c_deadline ; \/\/ only significant in light \/ deep blocking access mode:$/;"	m	struct:MYTS_ACCESS_MODE
c_header	mywssk.c	/^  struct MY_HTTP_REQUEST_HEADER c_header ; $/;"	m	struct:HTTP_REQUEST_READING	typeref:struct:HTTP_REQUEST_READING::MY_HTTP_REQUEST_HEADER	file:
c_header	wssk.c	/^  struct MY_HTTP_REQUEST_HEADER c_header ; $/;"	m	struct:HTTP_REQUEST_READING	typeref:struct:HTTP_REQUEST_READING::MY_HTTP_REQUEST_HEADER	file:
c_lastDataMsgId24	mymmtpc.c	/^  char c_lastDataMsgId24[24+1] ;$/;"	m	struct:MYMMTPC	file:
c_lastSequenceNumber	mymmtpc.c	/^  int c_lastSequenceNumber ;$/;"	m	struct:MYMMTPC	file:
c_localDataFileOpeningExtraFileSpecifer	myftpc.c	/^  int c_localDataFileOpeningExtraFileSpecifer ;$/;"	m	struct:MYFTPC	file:
c_mmtpPath	mymmtpc.c	/^  int c_mmtpPath ;$/;"	m	struct:MYMMTPC	file:
c_mmtpPathInStruct	mymmtpc.h	/^  struct MMTP_PATH_IN_DATA_MSG_ID_VALIDATION c_mmtpPathInStruct ; $/;"	m	union:MMTP_DATA_MSG_ID_VALIDATION	typeref:struct:MMTP_DATA_MSG_ID_VALIDATION::MMTP_PATH_IN_DATA_MSG_ID_VALIDATION
c_mmtpPathOutDataMsgId24	mymmtpc.h	/^  const char *c_mmtpPathOutDataMsgId24 ; $/;"	m	union:MMTP_DATA_MSG_ID_VALIDATION
c_mmtpPrimitiveBuffer	mymmtpc.c	/^  char c_mmtpPrimitiveBuffer[MY_MMTP_PRIMITIVE_BUFFER_SIZE] ;$/;"	m	struct:MYMMTPC	file:
c_mmtpPrimitiveBufferUsableLength	mymmtpc.c	/^  size_t c_mmtpPrimitiveBufferUsableLength ;$/;"	m	struct:MYMMTPC	file:
c_mmtpPrimitiveReadingPhysicalValidationStatus	mymmtpc.c	/^  int c_mmtpPrimitiveReadingPhysicalValidationStatus ;$/;"	m	struct:MYMMTPC	file:
c_myhttphStuff	mybwsp.c	/^  MYHTTPH_STUFF c_myhttphStuff; \/\/ Only significant if running state $/;"	m	struct:HTML_SERVER_CLIENT_HANDLER	file:
c_networkConnectionError	mymmtpc.h	/^  struct MY_NETWORK_CONNECTION_ERROR c_networkConnectionError ;$/;"	m	struct:MMTP_PHYSICAL_CONNECTION_ERROR	typeref:struct:MMTP_PHYSICAL_CONNECTION_ERROR::MY_NETWORK_CONNECTION_ERROR
c_pAlarmsCond	palarm.c	/^static pthread_cond_t c_pAlarmsCond ;$/;"	v	file:
c_pAlarmsMutex	palarm.c	/^static pthread_mutex_t c_pAlarmsMutex ;$/;"	v	file:
c_print2	myprint2.c	/^} c_print2 ;$/;"	v	typeref:struct:__anon21	file:
c_prscMsgEpochTime	mymmtpc.c	/^  time_t c_prscMsgEpochTime ;  $/;"	m	struct:MYMMTPC	file:
c_releaseCFunctionsExecutionStuffFunction	mybwsp.h	/^  c_releaseCFunctionsExecutionStuffFunction;$/;"	m	struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY
c_resourcesIndexFileName	mybwsp.c	/^  char c_resourcesIndexFileName[256];$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
c_scheduleCond	myalarm.c	/^static pthread_cond_t c_scheduleCond ;$/;"	v	file:
c_scheduleCond	mypalarm.c	/^static pthread_cond_t c_scheduleCond ;$/;"	v	file:
c_scheduleMutex	myalarm.c	/^static pthread_mutex_t c_scheduleMutex ;$/;"	v	file:
c_scheduleMutex	mypalarm.c	/^static pthread_mutex_t c_scheduleMutex ;$/;"	v	file:
c_serverConfig	mybwsp.c	/^} c_serverConfig ;$/;"	v	typeref:struct:__anon8
c_sockEnhancedReadingStuff	mymmtpc.c	/^  MY_ENHANCED_READING_STUFF c_sockEnhancedReadingStuff ; $/;"	m	struct:MYMMTPC	file:
c_sockEnhancedWritingStuff	mymmtpc.c	/^  MY_ENHANCED_WRITING_STUFF c_sockEnhancedWritingStuff ; $/;"	m	struct:MYMMTPC	file:
c_sockFd	mymmtpc.c	/^  int c_sockFd ;$/;"	m	struct:MYMMTPC	file:
c_sockFdFlags	mymmtpc.c	/^  int c_sockFdFlags ;$/;"	m	struct:MYMMTPC	file:
c_srvcMsgFlag	mymmtpc.c	/^  int c_srvcMsgFlag ;$/;"	m	struct:MYMMTPC	file:
c_terminationCond	mybwsp.c	/^static pthread_cond_t c_terminationCond ;$/;"	v	file:
c_terminationMutex	mybwsp.c	/^static pthread_mutex_t c_terminationMutex ;$/;"	v	file:
c_userAgent	mywssk.c	/^  struct USER_AGENT c_userAgent ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::USER_AGENT	file:
c_userAgent	wssk.c	/^  struct USER_AGENT c_userAgent ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::USER_AGENT	file:
c_waitSyncAckFlag	mymmtpc.c	/^  char c_waitSyncAckFlag ;$/;"	m	struct:MYMMTPC	file:
cacheLineFlag	palarm.c	/^	char cacheLineFlag ;$/;"	m	struct:__anon16	file:
cc_baseEpochTime	myts.h	/^  time_t cc_baseEpochTime; \/\/ Only significant in deep blocking access mode with a finite deadline ;$/;"	m	struct:MYTS_ACCESS_MODE_CONTROL
cc_blotsTemplateBufferSize	mybws.c	/^  size_t cc_blotsTemplateBufferSize ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
cc_cacheLineFlag	myalarm.c	/^char cc_cacheLineFlag ;$/;"	v
cc_cacheLineFlag	mypalarm.c	/^char cc_cacheLineFlag ;$/;"	v
cc_pAlarms	palarm.c	/^} cc_pAlarms ;$/;"	v	typeref:struct:__anon16	file:
cc_schedule	myalarm.c	/^static struct SCHEDULE cc_schedule ;$/;"	v	typeref:struct:SCHEDULE	file:
cc_schedule	mypalarm.c	/^static struct SCHEDULE cc_schedule ;$/;"	v	typeref:struct:SCHEDULE	file:
cc_scheduleHandlerTerminationRequestFlag	myalarm.c	/^static char cc_scheduleHandlerTerminationRequestFlag = 0;$/;"	v	file:
cc_scheduleHandlerTerminationRequestFlag	mypalarm.c	/^static char cc_scheduleHandlerTerminationRequestFlag = 0;$/;"	v	file:
cc_srvcMsgServiceDataBuffer1024	mymmtpc.c	/^  char cc_srvcMsgServiceDataBuffer1024[1024] ;$/;"	m	struct:MYMMTPC	file:
cc_srvcMsgServiceDataLength	mymmtpc.c	/^  size_t cc_srvcMsgServiceDataLength ;$/;"	m	struct:MYMMTPC	file:
ccc_cacheLine	myalarm.c	/^struct SCHEDULE_LINE ccc_cacheLine ;$/;"	v	typeref:struct:SCHEDULE_LINE
ccc_cacheLine	mypalarm.c	/^struct SCHEDULE_LINE ccc_cacheLine ;$/;"	v	typeref:struct:SCHEDULE_LINE
ccn_scheduleHandlerExpectedWakeupEpochTime	myalarm.c	/^time_t ccn_scheduleHandlerExpectedWakeupEpochTime ; $/;"	v
ccn_scheduleHandlerExpectedWakeupEpochTime	mypalarm.c	/^time_t ccn_scheduleHandlerExpectedWakeupEpochTime ; $/;"	v
ccn_scheduleHandlerTerminationStatus	myalarm.c	/^static int ccn_scheduleHandlerTerminationStatus ;$/;"	v	file:
ccn_scheduleHandlerTerminationStatus	mypalarm.c	/^static int ccn_scheduleHandlerTerminationStatus ;$/;"	v	file:
cg_checkAuthorizationsFunctionDynamicStuff	mybws.c	/^  void *cg_checkAuthorizationsFunctionDynamicStuff;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
cg_logCommandStatusFunctionStuff	myftpc.c	/^  void *cg_logCommandStatusFunctionStuff ;$/;"	m	struct:MYFTPC	file:
cgp_checkBlotsTemplatePathNameFunctionStaticStuff	mybws.c	/^  const void *cgp_checkBlotsTemplatePathNameFunctionStaticStuff ;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
ch_configFailureReason256	myauth.c	/^  char *ch_configFailureReason256;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	file:
ch_htmlStaticStuff	mybwsp.c	/^  MYBWS_RESPOND_STATIC_STUFF ch_htmlStaticStuff;$/;"	m	struct:__anon8	file:
ch_items	myauth.c	/^  struct NAMED_USERS_GROUP *ch_items ;$/;"	m	struct:NAMED_USERS_GROUPS	typeref:struct:NAMED_USERS_GROUPS::NAMED_USERS_GROUP	file:
ch_items	myauth.c	/^  struct USER *ch_items ;$/;"	m	struct:USERS	typeref:struct:USERS::USER	file:
ch_nodes	myauth.c	/^  struct PERMISSIONS_PATH_NODE *ch_nodes ;$/;"	m	struct:PERMISSIONS_TREE	typeref:struct:PERMISSIONS_TREE::PERMISSIONS_PATH_NODE	file:
checkDataMsgIdFunction	mymmtpc.h	/^  MMTP_PATH_IN_CHECK_DATA_MSG_ID_FUNCTION checkDataMsgIdFunction ;$/;"	m	struct:MMTP_PATH_IN_DATA_MSG_ID_VALIDATION
checkReadDataAttemptsCount	myrw.c	/^  int checkReadDataAttemptsCount ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
checkReadDataFunction	myrw.c	/^  MYRW_CHECK_READ_DATA_FUNCTION checkReadDataFunction ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
checkReadDataFunctionPrivateStuff	myrw.c	/^  void *checkReadDataFunctionPrivateStuff ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
clientTcpPort	mybwsp.c	/^  int clientTcpPort ;$/;"	m	struct:HTML_SERVER_CLIENT_HANDLER	file:
cn_dataSockFd	myftpc.c	/^  int cn_dataSockFd ;$/;"	m	struct:MYFTPC	file:
cn_dcnxReqDisconnectionReason	mymmtpc.c	/^  int cn_dcnxReqDisconnectionReason ;$/;"	m	struct:MYMMTPC	file:
cn_peerRank	mymmtpc.c	/^  int cn_peerRank ;$/;"	m	struct:MYMMTPC	file:
cn_tracesFile	mymmtpc.c	/^  FILE *cn_tracesFile ;$/;"	m	struct:MYMMTPC	file:
cnh_blotsTemplateBuffer	mybws.c	/^  char *cnh_blotsTemplateBuffer ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
configFailureFlag	myauth.c	/^  char configFailureFlag ;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	file:
conxAck	mymmtpc.c	/^  struct CONX_ACK_PARSING conxAck ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::CONX_ACK_PARSING	file:
conxNack	mymmtpc.c	/^  struct CONX_NACK_PARSING conxNack ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::CONX_NACK_PARSING	file:
conxReq	mymmtpc.c	/^  struct CONX_REQ_PARSING conxReq ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::CONX_REQ_PARSING	file:
cookies	mybws.h	/^  struct MY_RECYCLABLE_PARAMETERS cookies ;$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::MY_RECYCLABLE_PARAMETERS
cookies	mywssk.c	/^  struct MY_RECYCLABLE_PARAMETERS cookies ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::MY_RECYCLABLE_PARAMETERS	file:
cookies	wssk.c	/^  struct MY_RECYCLABLE_PARAMETERS cookies ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::MY_RECYCLABLE_PARAMETERS	file:
copiedAuthenticationFlag	mybws.h	/^  char copiedAuthenticationFlag ;$/;"	m	struct:BLOT_CONTEXT
copiedAuthorizationFlag	mybws.h	/^  char copiedAuthorizationFlag ;$/;"	m	struct:BLOT_CONTEXT
copiedCookieImplementationFlag	mybws.h	/^  char copiedCookieImplementationFlag ;$/;"	m	struct:BLOT_CONTEXT
copiedName	myauth.c	/^  struct MY_RECYCLABLE_STRING copiedName ;$/;"	m	struct:NAMED_USERS_GROUP	typeref:struct:NAMED_USERS_GROUP::MY_RECYCLABLE_STRING	file:
copiedName	myauth.c	/^  struct MY_RECYCLABLE_STRING copiedName ;$/;"	m	struct:USER	typeref:struct:USER::MY_RECYCLABLE_STRING	file:
copiedPassword	myauth.c	/^  struct MY_RECYCLABLE_STRING copiedPassword ;$/;"	m	struct:USER	typeref:struct:USER::MY_RECYCLABLE_STRING	file:
copiedPath	myauth.c	/^  struct MY_RECYCLABLE_STRING copiedPath ;$/;"	m	struct:PERMISSIONS_PATH_NODE	typeref:struct:PERMISSIONS_PATH_NODE::MY_RECYCLABLE_STRING	file:
copiedRequestUrl	mybws.h	/^  struct HTTP_URL copiedRequestUrl ; \/\/ in copied state$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::HTTP_URL
count	myalarm.c	/^  int count ; \/\/ >= 0 and <= allocCount ; number of "logical" alarm lines ;$/;"	m	struct:SCHEDULE	file:
count	myauth.c	/^  int count ;$/;"	m	struct:NAMED_USERS_GROUPS	file:
count	myauth.c	/^  int count ;$/;"	m	struct:USERS	file:
count	mypalarm.c	/^  int count ; \/\/ >= 0 and <= allocCount ; number of "logical" alarm lines ;$/;"	m	struct:SCHEDULE	file:
count	myprint2.c	/^  unsigned long count ;$/;"	m	struct:LOG_EVENT_COUNTER	file:
count	palarm.c	/^  int count ; \/\/ >= 0 and <= allocCount ; number of "logical" alarm lines ;$/;"	m	struct:SCHEDULE	file:
countTrigger	myprint2.c	/^  unsigned long countTrigger ;$/;"	m	struct:LOG_EVENT_COUNTER	file:
cs_clientHandlers	mybwsp.c	/^static struct HTML_SERVER_CLIENT_HANDLER cs_clientHandlers[MAX_CLIENT_HANDLERS_NUMBER] ; $/;"	v	typeref:struct:HTML_SERVER_CLIENT_HANDLER	file:
dataBufferSize	myrw.c	/^  size_t dataBufferSize ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
dataMsg	mymmtpc.c	/^  struct DATA_MSG_PARSING dataMsg ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::DATA_MSG_PARSING	file:
dataMsgId24	mymmtpc.c	/^  char dataMsgId24[24+1] ; \/\/ Printable characters$/;"	m	struct:DATA_MSG_PARSING	file:
dataMsgId24	mymmtpc.c	/^  char dataMsgId24[24+1] ; \/\/ Printable characters$/;"	m	struct:START_ACK_PARSING	file:
dataMsgId24	mymmtpc.c	/^  char dataMsgId24[24+1] ; \/\/ Printable characters$/;"	m	struct:START_NACK_PARSING	file:
dataMsgId24	mymmtpc.c	/^  char dataMsgId24[24+1] ; \/\/ Printable characters$/;"	m	struct:START_REQ_PARSING	file:
dataMsgId24	mymmtpc.c	/^  char dataMsgId24[24+1] ; \/\/ Printable characters$/;"	m	struct:SYNC_ACK_PARSING	file:
dataMsgId24	mymmtpc.h	/^  char dataMsgId24[24+1] ; \/\/ 24 non null characters, completed eventually with$/;"	m	struct:MMTP_STANDARD_ADMIN_DATA
dcnxAck	mymmtpc.c	/^  struct DCNX_ACK_PARSING dcnxAck ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::DCNX_ACK_PARSING	file:
dcnxReq	mymmtpc.c	/^  struct DCNX_REQ_PARSING dcnxReq;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::DCNX_REQ_PARSING	file:
deliveryTimestamp12	mymmtpc.c	/^  char deliveryTimestamp12[12+1] ; \/\/ Printable characters $/;"	m	struct:DATA_MSG_PARSING	file:
deliveryTimestamp12	mymmtpc.h	/^  char deliveryTimestamp12[12+1] ; \/\/ 12 non null characters$/;"	m	struct:MMTP_STANDARD_ADMIN_DATA
disconnectionReason	mymmtpc.c	/^  int disconnectionReason ; \/\/ >= 0 number$/;"	m	struct:DCNX_REQ_PARSING	file:
dumpHttpRequestFunctionStuff	mywssk.c	/^  struct DUMP_HTTP_REQUEST_FUNCTION_STUFF dumpHttpRequestFunctionStuff ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
dumpHttpRequestFunctionStuff	wssk.c	/^  struct DUMP_HTTP_REQUEST_FUNCTION_STUFF dumpHttpRequestFunctionStuff ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
encryptedDataFlag	mymmtpc.c	/^  char encryptedDataFlag ; $/;"	m	struct:CONX_ACK_PARSING	file:
encryptedDataFlag	mymmtpc.c	/^  char encryptedDataFlag ; $/;"	m	struct:CONX_REQ_PARSING	file:
errInd	mymmtpc.c	/^  struct ERR_IND_PARSING errInd ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::ERR_IND_PARSING	file:
errorCode	mymmtpc.c	/^  int errorCode ; \/\/ >= 0 number$/;"	m	struct:ERR_IND_PARSING	file:
errorDetail	mymmtpc.c	/^  int errorDetail ; \/\/ >= 0 number$/;"	m	struct:ERR_IND_PARSING	file:
eventHash	myprint2.c	/^  unsigned long eventHash ;$/;"	m	struct:LOG_EVENT_COUNTER	file:
f	pr7.c	/^int f (int cpt) {$/;"	f
formalInitFlag	myalarm.c	/^static char formalInitFlag = 0;$/;"	v	file:
formalInitFlag	mypalarm.c	/^static char formalInitFlag = 0;$/;"	v	file:
g_validationStuff	mymmtpc.h	/^  void *g_validationStuff ; $/;"	m	struct:MMTP_PATH_IN_DATA_MSG_ID_VALIDATION
gapsCount	myalarm.c	/^  int gapsCount ; \/\/ >= 0 and <= count ; number of disabled alarms$/;"	m	struct:SCHEDULE	file:
gapsCount	mypalarm.c	/^  int gapsCount ; \/\/ >= 0 and <= count ; number of disabled alarms$/;"	m	struct:SCHEDULE	file:
gapsCount	palarm.c	/^  int gapsCount ; \/\/ >= 0 and <= count ; number of disabled alarms$/;"	m	struct:SCHEDULE	file:
h_accessFilePathName	myauth.c	/^  char *h_accessFilePathName;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	file:
h_alarmEpochTimesIndex	myalarm.c	/^  int *h_alarmEpochTimesIndex ;$/;"	m	struct:SCHEDULE	file:
h_alarmEpochTimesIndex	mypalarm.c	/^  int *h_alarmEpochTimesIndex ;$/;"	m	struct:SCHEDULE	file:
h_alarmEpochTimesIndex	palarm.c	/^  int *h_alarmEpochTimesIndex ;$/;"	m	struct:SCHEDULE	file:
h_dataBuffer	myrw.c	/^  char *h_dataBuffer ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
h_gaps	myalarm.c	/^  int *h_gaps ; \/\/ stack of disabled alarms$/;"	m	struct:SCHEDULE	file:
h_gaps	mypalarm.c	/^  int *h_gaps ; \/\/ table of disabled alarms$/;"	m	struct:SCHEDULE	file:
h_gaps	palarm.c	/^  int *h_gaps ; \/\/ stack of disabled alarms$/;"	m	struct:SCHEDULE	file:
h_lines	myalarm.c	/^  struct SCHEDULE_LINE *h_lines ; \/\/ one line <=> one scheduled alarm $/;"	m	struct:SCHEDULE	typeref:struct:SCHEDULE::SCHEDULE_LINE	file:
h_lines	mypalarm.c	/^  struct SCHEDULE_LINE *h_lines ; \/\/ one line <=> one scheduled alarm $/;"	m	struct:SCHEDULE	typeref:struct:SCHEDULE::SCHEDULE_LINE	file:
h_lines	palarm.c	/^  struct SCHEDULE_LINE *h_lines ; \/\/ one line <=> one scheduled alarm $/;"	m	struct:SCHEDULE	typeref:struct:SCHEDULE::SCHEDULE_LINE	file:
h_pthreadsIndex	myalarm.c	/^  int *h_pthreadsIndex ;$/;"	m	struct:SCHEDULE	file:
h_pthreadsIndex	mypalarm.c	/^  int *h_pthreadsIndex ;$/;"	m	struct:SCHEDULE	file:
h_pthreadsIndex	palarm.c	/^  int *h_pthreadsIndex ;$/;"	m	struct:SCHEDULE	file:
h_requestBuffer	mywssk.c	/^  char *h_requestBuffer ; $/;"	m	struct:MYWSSKH	file:
h_requestBuffer	wssk.c	/^  char *h_requestBuffer ; $/;"	m	struct:MYWSSKH	file:
h_resourcesDirectoryPathName	mybws.c	/^  char * h_resourcesDirectoryPathName ;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
h_responseContentBuffer	mywssk.c	/^  char *h_responseContentBuffer ;$/;"	m	struct:MYWSSKH	file:
h_responseContentBuffer	wssk.c	/^  char *h_responseContentBuffer ;$/;"	m	struct:MYWSSKH	file:
h_usersFilePathName	myauth.c	/^  char *h_usersFilePathName;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	file:
h_usersIndex	myauth.c	/^  int *h_usersIndex ;$/;"	m	struct:USERS_GROUP	file:
h_usersPermissionLines	myauth.c	/^  struct PATH_NODE_USERS_PERMISSION_LINE *h_usersPermissionLines ; $/;"	m	struct:PERMISSIONS_PATH_NODE	typeref:struct:PERMISSIONS_PATH_NODE::PATH_NODE_USERS_PERMISSION_LINE	file:
hash16	mymmtpc.h	/^  short unsigned int hash16 ; \/\/ Usefull to distinguish the different reasons $/;"	m	struct:MMTP_REFUSAL_OR_DISCONNECTION_REASON
headerAsciiLineDelimitors	mywssk.c	/^  struct ASCII_LINE_DELIMITORS headerAsciiLineDelimitors ;$/;"	m	struct:HTTP_REQUEST_READING	typeref:struct:HTTP_REQUEST_READING::ASCII_LINE_DELIMITORS	file:
headerAsciiLineDelimitors	wssk.c	/^  struct ASCII_LINE_DELIMITORS headerAsciiLineDelimitors ;$/;"	m	struct:HTTP_REQUEST_READING	typeref:struct:HTTP_REQUEST_READING::ASCII_LINE_DELIMITORS	file:
headerAsciiLinesDynamicalParsingStuff	mywssk.c	/^  MY_ASCII_LINES_DYNAMICAL_PARSING_STUFF headerAsciiLinesDynamicalParsingStuff ;$/;"	m	struct:HTTP_REQUEST_READING	file:
headerAsciiLinesDynamicalParsingStuff	wssk.c	/^  MY_ASCII_LINES_DYNAMICAL_PARSING_STUFF headerAsciiLinesDynamicalParsingStuff ;$/;"	m	struct:HTTP_REQUEST_READING	file:
headerAsciiLinesLength	mywssk.c	/^  size_t headerAsciiLinesLength ;$/;"	m	struct:HTTP_REQUEST_READING	file:
headerAsciiLinesLength	wssk.c	/^  size_t headerAsciiLinesLength ;$/;"	m	struct:HTTP_REQUEST_READING	file:
headerReadingPhaseFlag	mywssk.c	/^  char headerReadingPhaseFlag ; $/;"	m	struct:HTTP_REQUEST_READING	file:
headerReadingPhaseFlag	wssk.c	/^  char headerReadingPhaseFlag ; $/;"	m	struct:HTTP_REQUEST_READING	file:
htmlServerBlotFunctionsLibraries	blotbidon.c	/^struct HTML_SERVER_BLOT_FUNCTIONS_LIBRARY htmlServerBlotFunctionsLibraries[] = {$/;"	v	typeref:struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY
httpRequestMethod	mybws.h	/^  int httpRequestMethod ;$/;"	m	struct:BLOT_CONTEXT
httpResponseStatus	mybws.h	/^  int httpResponseStatus ;$/;"	m	struct:BLOT_CONTEXT
lastSequenceNumber	mymmtpc.c	/^  int lastSequenceNumber ; \/\/ >= 0 number$/;"	m	struct:DCNX_ACK_PARSING	file:
lastSequenceNumber	mymmtpc.c	/^  int lastSequenceNumber ; \/\/ >= 0 number$/;"	m	struct:DCNX_REQ_PARSING	file:
lastSequenceNumber	mymmtpc.c	/^  int lastSequenceNumber ; \/\/ >= 0 number$/;"	m	struct:ERR_IND_PARSING	file:
lastSequenceNumber	mymmtpc.c	/^  int lastSequenceNumber ; \/\/ >= 0 number$/;"	m	struct:SYNC_ACK_PARSING	file:
lineDelimitors	myftpc.c	/^  struct ASCII_LINE_DELIMITORS lineDelimitors ; $/;"	m	struct:FTP_COMMAND_STATUS_READING	typeref:struct:FTP_COMMAND_STATUS_READING::ASCII_LINE_DELIMITORS	file:
lineOwnerPthread	myprint2.c	/^  pthread_t lineOwnerPthread ;$/;"	m	struct:__anon21	file:
linesDynamicalParsingStuff	myftpc.c	/^  MY_ASCII_LINES_DYNAMICAL_PARSING_STUFF linesDynamicalParsingStuff ;$/;"	m	struct:FTP_COMMAND_STATUS_READING	file:
listeningPort	mybwsp.c	/^  int listeningPort;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
logEnabledFlag	myprint2.c	/^  char logEnabledFlag ;$/;"	m	struct:__anon21	file:
logEventCounters	myprint2.c	/^  struct LOG_EVENT_COUNTER logEventCounters[MAX_LOG_EVENT_COUNTERS_NUMBER] ;$/;"	m	struct:__anon21	typeref:struct:__anon21::LOG_EVENT_COUNTER	file:
logEventCountersNumber	myprint2.c	/^  int logEventCountersNumber ;$/;"	m	struct:__anon21	file:
logEventId	myprint2.c	/^  int logEventId ;$/;"	m	struct:LOG_EVENT_COUNTER	file:
logSeverity	myprint2.c	/^  int logSeverity ;$/;"	m	struct:LOG_EVENT_COUNTER	file:
main	c.c	/^int main (int argc, const char**argv) {$/;"	f
main	main.c	/^int main (int argc, const char **argv) {$/;"	f
main	main2.c	/^int main (int argc, const char **argv) {$/;"	f
main	mybwsp.c	/^int main (int argc, const char **argv) {$/;"	f
main	pr7.c	/^int main (int argc, const char**argv) {$/;"	f
main	s.c	/^int main (int argc, const char**argv) {$/;"	f
main	server2.c	/^main (int argc, char **argv) {$/;"	f
main	synchloic.c	/^int main (int argc, const char **argv) {$/;"	f
main	synchsrc.c	/^int main (int argc, const char **argv) {$/;"	f
main	teststring.c	/^int main (int argc, const char **argv) {$/;"	f
managerControl	palarm.c	/^	} managerControl ;$/;"	m	struct:__anon16	typeref:struct:__anon16::__anon17	file:
maxChallenges	myauth.c	/^  int maxChallenges;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	file:
maxChallenges	mybwsp.c	/^  int maxChallenges;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
messageLength	myrw.c	/^  size_t messageLength; \/\/ > 0  <=> complete message read$/;"	m	struct:MYRW_ENHANCED_READING	file:
mutex	myprint2.c	/^  pthread_mutex_t mutex ;$/;"	m	struct:__anon21	file:
myBlotFunctions1	blotbidon.c	/^struct BLOT_FUNCTION myBlotFunctions1[] = {$/;"	v	typeref:struct:BLOT_FUNCTION
myBlotFunctions2	blotbidon.c	/^struct BLOT_FUNCTION myBlotFunctions2[] = {$/;"	v	typeref:struct:BLOT_FUNCTION
myftpcStuffStatus	myftpc.c	/^  int myftpcStuffStatus ; \/\/ See enum above $/;"	m	struct:MYFTPC	file:
mymmtpcUpdateTracesFile	mymmtpc.c	/^static void mymmtpcUpdateTracesFile ($/;"	f	file:
myprint2OverflowFlag	myprint2.c	/^char myprint2OverflowFlag = 0 ;$/;"	v
n_anonymousUserPermissionFlags	myauth.c	/^  int n_anonymousUserPermissionFlags ; \/\/ -1 means "inherited"$/;"	m	struct:PERMISSIONS_PATH_NODE	file:
n_challengedNodeEntry	myauth.c	/^  int n_challengedNodeEntry ;$/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC	file:
n_checkAuthorizationsFunction	mybws.c	/^  MYBWS_RESPOND_CHECK_AUTHORIZATIONS_FUNCTION n_checkAuthorizationsFunction;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
n_checkBlotsTemplatePathNameFunction	mybws.c	/^  MYBWS_RESPOND_CHECK_BLOTS_TEMPLATE_PATH_NAME_FUNCTION n_checkBlotsTemplatePathNameFunction ;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
n_clientTcpPort	mywssk.c	/^  int n_clientTcpPort ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
n_clientTcpPort	wssk.c	/^  int n_clientTcpPort ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
n_expectedWakeupEpochTime	palarm.c	/^	  time_t n_expectedWakeupEpochTime ; \/\/ meaning:$/;"	m	struct:__anon16::__anon17	file:
n_id	mybwsp.h	/^  int n_id ;$/;"	m	struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY
n_initCFunctionsExecutionStuffFunction	mybwsp.h	/^  n_initCFunctionsExecutionStuffFunction;$/;"	m	struct:HTML_SERVER_BLOT_FUNCTIONS_LIBRARY
n_lastSig	synchloic.c	/^static int n_lastSig = -1 ; $/;"	v	file:
n_lastSig	synchsrc.c	/^static int n_lastSig = -1 ; $/;"	v	file:
n_logCommandStatusFunction	myftpc.c	/^  MY_FTP_LOG_COMMAND_STATUS_FUNCTION n_logCommandStatusFunction ;$/;"	m	struct:MYFTPC	file:
n_myCustomAlarmFunction	myaccess.c	/^MY_CUSTOM_ALARM_FUNCTION n_myCustomAlarmFunction = NULL ;$/;"	v
n_mytsCustomAlarmFunction	myts.c	/^MYTS_CUSTOM_ALARM_FUNCTION n_mytsCustomAlarmFunction = NULL ;$/;"	v
n_nearestParentEntry	myauth.c	/^  int n_nearestParentEntry ;$/;"	m	struct:PERMISSIONS_PATH_NODE	file:
n_overflowRequiredTextBufferSize	myprint2.c	/^  int n_overflowRequiredTextBufferSize ;$/;"	m	struct:__anon21	file:
n_terminationStatus	mybwsp.c	/^  int n_terminationStatus ; \/\/ -1 special value: running state$/;"	m	struct:HTML_SERVER_CLIENT_HANDLER	file:
n_terminationStatus	palarm.c	/^	  int n_terminationStatus ; \/\/ usage:$/;"	m	struct:__anon16::__anon17	file:
namedUsersGroups	myauth.c	/^  struct NAMED_USERS_GROUPS namedUsersGroups ; $/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	typeref:struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC::NAMED_USERS_GROUPS	file:
nap_myConfigParamValues	blotbidon.c	/^const struct MY_RECYCLABLE_STRINGS *nap_myConfigParamValues = NULL ;$/;"	v	typeref:struct:MY_RECYCLABLE_STRINGS
nextSequenceNumber	mymmtpc.c	/^  int nextSequenceNumber ; \/\/ >= 0 number$/;"	m	struct:START_ACK_PARSING	file:
nh_applicationName	myprint2.c	/^  char *nh_applicationName ;$/;"	m	struct:__anon21	file:
nh_clientDottedDecimalIp	mywssk.c	/^  char *nh_clientDottedDecimalIp ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
nh_clientDottedDecimalIp	wssk.c	/^  char *nh_clientDottedDecimalIp ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	file:
nh_realm	myauth.c	/^  char *nh_realm ;$/;"	m	struct:PERMISSIONS_PATH_NODE	file:
nh_resourcesIndexFileAbsPathName	mybws.c	/^  char * nh_resourcesIndexFileAbsPathName ;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
nh_sharedTextBuffer	myprint2.c	/^  char *nh_sharedTextBuffer ;$/;"	m	struct:__anon21	file:
nh_temporaryFileDescriptor	mybws.c	/^  int nh_temporaryFileDescriptor ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
nodesCount	myauth.c	/^  int nodesCount ;$/;"	m	struct:PERMISSIONS_TREE	file:
np_defaultValue	mybwsp.h	/^  const char *np_defaultValue ; \/\/ made of printable characters $/;"	m	struct:HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF
officialDescription	mymmtpc.h	/^  char officialDescription[256] ;$/;"	m	struct:MMTP_REFUSAL_OR_DISCONNECTION_REASON
outEnhancedWriting	myprint2.c	/^  MY_ENHANCED_WRITING_STUFF outEnhancedWriting ;$/;"	m	struct:__anon21	file:
pAlarmsInitFlag	palarm.c	/^static char pAlarmsInitFlag = 0;$/;"	v	file:
p_htmlServerBlotsPrivateConfigParamDefs	blotbidon.c	/^const struct HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF p_htmlServerBlotsPrivateConfigParamDefs[] = {$/;"	v	typeref:struct:HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF
p_name	mybwsp.h	/^  const char *p_name ; \/\/ stricly made of alphanumerical or underscore ('_') ASCII characters; $/;"	m	struct:HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF
p_staticStuff	myauth.c	/^  CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC_STUFF p_staticStuff; $/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_DYNAMIC	file:
p_staticStuff	mybws.c	/^  MYBWS_RESPOND_STATIC_STUFF p_staticStuff ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	file:
permissionFlags	myauth.c	/^  int permissionFlags ;$/;"	m	struct:PATH_NODE_USERS_PERMISSION_LINE	file:
permissionsTree	myauth.c	/^  struct PERMISSIONS_TREE permissionsTree ; $/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	typeref:struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC::PERMISSIONS_TREE	file:
pid	myprint2.c	/^  pid_t pid ;$/;"	m	struct:__anon21	file:
postParameters	mybws.h	/^  struct MY_RECYCLABLE_PARAMETERS postParameters ;$/;"	m	struct:BLOT_CONTEXT	typeref:struct:BLOT_CONTEXT::MY_RECYCLABLE_PARAMETERS
primitiveId	mymmtpc.h	/^  int primitiveId ; \/\/ a positive number$/;"	m	struct:MMTP_REFUSAL_OR_DISCONNECTION_REASON
print2Flag	myprint2.c	/^static char print2Flag = 0;$/;"	v	file:
psp_commentLines	mybwsp.h	/^  const char * const *psp_commentLines ; \/\/ Made of printable characters $/;"	m	struct:HTML_SERVER_BLOTS_PRIVATE_CONFIG_PARAM_DEF
psp_trocCommentLines	blotbidon.c	/^const char * const psp_trocCommentLines[] = { "It's a dummy parameter", "with a dummy value", NULL } ; $/;"	v
pthreadsIndexCount	myalarm.c	/^  int pthreadsIndexCount ; \/\/ >=0 and <= count;$/;"	m	struct:SCHEDULE	file:
pthreadsIndexCount	mypalarm.c	/^  int pthreadsIndexCount ; \/\/ >=0 and <= count;$/;"	m	struct:SCHEDULE	file:
pthreadsIndexCount	palarm.c	/^  int pthreadsIndexCount ; \/\/ >=0 and <= count;$/;"	m	struct:SCHEDULE	file:
readDataLength	myrw.c	/^  size_t readDataLength ;$/;"	m	struct:MYRW_ENHANCED_READING	file:
reason	mymmtpc.h	/^  int reason ; \/\/ a positive number $/;"	m	struct:MMTP_REFUSAL_OR_DISCONNECTION_REASON
refusalReason	mymmtpc.c	/^  int refusalReason ; \/\/ >= 0 number$/;"	m	struct:CONX_NACK_PARSING	file:
refusalReason	mymmtpc.c	/^  int refusalReason ; \/\/ >= 0 number$/;"	m	struct:START_NACK_PARSING	file:
refusedMessageLength	mymmtpc.c	/^  size_t refusedMessageLength ; \/\/ >= 0 number$/;"	m	struct:ERR_IND_PARSING	file:
requestBufferSize	mywssk.c	/^  size_t requestBufferSize ;$/;"	m	struct:MYWSSKH	file:
requestBufferSize	wssk.c	/^  size_t requestBufferSize ;$/;"	m	struct:MYWSSKH	file:
requestReading	mywssk.c	/^  struct HTTP_REQUEST_READING requestReading ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::HTTP_REQUEST_READING	file:
requestReading	wssk.c	/^  struct HTTP_REQUEST_READING requestReading ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::HTTP_REQUEST_READING	file:
requestUrl	mywssk.c	/^  struct HTTP_URL requestUrl ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::HTTP_URL	file:
requestUrl	wssk.c	/^  struct HTTP_URL requestUrl ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::HTTP_URL	file:
resourcesDirectoryPathNameLength	mybws.c	/^  int resourcesDirectoryPathNameLength ;$/;"	m	struct:MYBWS_RESPOND_STATIC	file:
resourcesIndexFileNameFlag	mybwsp.c	/^  char resourcesIndexFileNameFlag ;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
resourcesLocation	mybwsp.c	/^  char resourcesLocation[256] ;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
responseContentBufferSize	mywssk.c	/^  size_t responseContentBufferSize ;$/;"	m	struct:MYWSSKH	file:
responseContentBufferSize	wssk.c	/^  size_t responseContentBufferSize ;$/;"	m	struct:MYWSSKH	file:
responseHeader	mywssk.c	/^  struct MY_HTTP_MESSAGE_HEADER_CONSTRUCTOR responseHeader ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::MY_HTTP_MESSAGE_HEADER_CONSTRUCTOR	file:
responseHeader	wssk.c	/^  struct MY_HTTP_MESSAGE_HEADER_CONSTRUCTOR responseHeader ; $/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::MY_HTTP_MESSAGE_HEADER_CONSTRUCTOR	file:
retStatus	myrw.c	/^  int retStatus = 0 ; \/\/ a priori$/;"	v
schedule	palarm.c	/^	struct SCHEDULE schedule ;$/;"	m	struct:__anon16	typeref:struct:__anon16::SCHEDULE	file:
sendTimestamp12	mymmtpc.c	/^  char sendTimestamp12[12+1] ; \/\/ Printable characters $/;"	m	struct:DATA_MSG_PARSING	file:
sendTimestamp12	mymmtpc.h	/^  char sendTimestamp12[12+1] ; \/\/ 12 non null characters$/;"	m	struct:MMTP_STANDARD_ADMIN_DATA
sequenceNumber	mymmtpc.c	/^  int sequenceNumber ; \/\/ >= 0 number$/;"	m	struct:DATA_MSG_PARSING	file:
serverType	mybwsp.c	/^  int serverType; \/\/ 0: TEST ; 1:HTML$/;"	m	struct:__anon8	file:
serverType	mybwsp.c	/^  int serverType;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
serviceDataLength	mymmtpc.c	/^  size_t serviceDataLength ; \/\/ >= 0 number$/;"	m	struct:SRVC_MSG_PARSING	file:
serviceType4	mymmtpc.c	/^  char serviceType4[4+1] ; \/\/ Printable characters$/;"	m	struct:SRVC_MSG_PARSING	file:
sigTermFlag	mybwsp.c	/^static char volatile sigTermFlag = 0 ;$/;"	v	file:
sockEnhancedReadingStuff	mywssk.c	/^  MY_ENHANCED_READING_STUFF sockEnhancedReadingStuff ;$/;"	m	struct:MYWSSKH	file:
sockEnhancedReadingStuff	wssk.c	/^  MY_ENHANCED_READING_STUFF sockEnhancedReadingStuff ;$/;"	m	struct:MYWSSKH	file:
sockEnhancedWritingStuff	mywssk.c	/^  MY_ENHANCED_WRITING_STUFF sockEnhancedWritingStuff ;$/;"	m	struct:MYWSSKH	file:
sockEnhancedWritingStuff	wssk.c	/^  MY_ENHANCED_WRITING_STUFF sockEnhancedWritingStuff ;$/;"	m	struct:MYWSSKH	file:
sockFd	mywssk.c	/^  int sockFd ;$/;"	m	struct:MYWSSKH	file:
sockFd	mywssk.c	/^  int sockFd ;$/;"	m	struct:MYWSSKL	file:
sockFd	wssk.c	/^  int sockFd ;$/;"	m	struct:MYWSSKH	file:
sockFd	wssk.c	/^  int sockFd ;$/;"	m	struct:MYWSSKL	file:
srvcMsg	mymmtpc.c	/^  struct SRVC_MSG_PARSING srvcMsg ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::SRVC_MSG_PARSING	file:
stackBase	checkstack.c	/^void *stackBase ;$/;"	v
stackInfo256	checkstack.c	/^char stackInfo256[256] ;$/;"	v
stackMaxDiff	checkstack.c	/^unsigned int stackMaxDiff ;$/;"	v
startAck	mymmtpc.c	/^  struct START_ACK_PARSING startAck ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::START_ACK_PARSING	file:
startNack	mymmtpc.c	/^  struct START_NACK_PARSING startNack ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::START_NACK_PARSING	file:
startReq	mymmtpc.c	/^  struct START_REQ_PARSING startReq ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::START_REQ_PARSING	file:
staticConfigFlag	mybwsp.c	/^  char staticConfigFlag;$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
stuffStatus	mymmtpc.c	/^  int stuffStatus ;$/;"	m	struct:MYMMTPC	file:
subscriberId11	mymmtpc.c	/^  char subscriberId11[11+1] ; \/\/ Printable characters$/;"	m	struct:CONX_REQ_PARSING	file:
syncAck	mymmtpc.c	/^  struct SYNC_ACK_PARSING syncAck ;$/;"	m	union:MMTP_PRIMITIVE_PARSING	typeref:struct:MMTP_PRIMITIVE_PARSING::SYNC_ACK_PARSING	file:
terminationRequestFlag	palarm.c	/^	  char terminationRequestFlag ; \/\/ meaning:$/;"	m	struct:__anon16::__anon17	file:
textBufferSize1024	myprint2.c	/^  int textBufferSize1024 ;$/;"	m	struct:__anon21	file:
thatPthread	myalarm.c	/^  pthread_t thatPthread ; $/;"	m	struct:SCHEDULE_LINE	file:
thatPthread	mypalarm.c	/^  pthread_t thatPthread ; $/;"	m	struct:SCHEDULE_LINE	file:
thatPthread	palarm.c	/^  pthread_t thatPthread ; $/;"	m	struct:SCHEDULE_LINE	file:
users	myauth.c	/^  struct USERS users ; $/;"	m	struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC	typeref:struct:CHECK_AUTHORIZATIONS_A_LA_APACHE_STATIC::USERS	file:
usersFilePathName	mybwsp.c	/^  char usersFilePathName[256];$/;"	m	struct:CONFIG_FILE_PARAMETERS	file:
usersGroup	myauth.c	/^  struct USERS_GROUP usersGroup ;$/;"	m	struct:NAMED_USERS_GROUP	typeref:struct:NAMED_USERS_GROUP::USERS_GROUP	file:
usersGroup	myauth.c	/^  struct USERS_GROUP usersGroup ;$/;"	m	struct:PATH_NODE_USERS_PERMISSION_LINE	typeref:struct:PATH_NODE_USERS_PERMISSION_LINE::USERS_GROUP	file:
usersIndexAllocCount	myauth.c	/^  int usersIndexAllocCount ;$/;"	m	struct:USERS_GROUP	file:
usersIndexCount	myauth.c	/^  int usersIndexCount ;$/;"	m	struct:USERS_GROUP	file:
usersPermissionLinesCount	myauth.c	/^  int usersPermissionLinesCount ;$/;"	m	struct:PERMISSIONS_PATH_NODE	file:
workingFieldValue	mywssk.c	/^  struct MY_RECYCLABLE_STRING workingFieldValue ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::MY_RECYCLABLE_STRING	file:
workingFieldValue	mywssk.c	/^  struct MY_RECYCLABLE_STRING workingFieldValue ;$/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::MY_RECYCLABLE_STRING	file:
workingFieldValue	wssk.c	/^  struct MY_RECYCLABLE_STRING workingFieldValue ;$/;"	m	struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF	typeref:struct:DUMP_HTTP_REQUEST_FUNCTION_STUFF::MY_RECYCLABLE_STRING	file:
workingFieldValue	wssk.c	/^  struct MY_RECYCLABLE_STRING workingFieldValue ;$/;"	m	struct:MYWSSKH	typeref:struct:MYWSSKH::MY_RECYCLABLE_STRING	file:
workingString	mybws.c	/^  struct MY_RECYCLABLE_STRING workingString ;$/;"	m	struct:MYBWS_RESPOND_DYNAMIC	typeref:struct:MYBWS_RESPOND_DYNAMIC::MY_RECYCLABLE_STRING	file:
wrongServiceFlag	mymmtpc.h	/^  char wrongServiceFlag ; \/\/ peer responds on host, but does not support MMTP$/;"	m	struct:MMTP_PHYSICAL_CONNECTION_ERROR
x_enhancedReadingStuff	myrw.c	/^  free(x_enhancedReadingStuff) ;$/;"	v
yetNewLineFlag	myprint2.c	/^  char yetNewLineFlag ;$/;"	m	struct:__anon21	file:
