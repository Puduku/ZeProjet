c-ansi/c-parse.topo
(c) Puduku - 2023

Goal: Handle ordinary parsings without excessive headaches...
Idea: give up distinction made a priori between syntactic and lexical analyses.
Principle: Parsing = hierarchical and sequential assemblage of very elementary parsing steps

Parsing step is an elementary operation which extracts "head" lexeme of a sequence (of characters) 
PARSE(S,L) : 
 - S:sequence:
   + In: initial sequence
   + Out: remaining sequence after lexeme extraction
- L:lexeme:
  + out: lexeme extracted at the begin of the sequence

Notes:
 - The parsing step is, in essence, always a successful operation.
 - Borderline cases (such as empty lexeme with unchanged sequence; empty sequence with lexeme corresponding
   to the initial sequence) do not constitute, in themselves, cases of parsing "error".
 - Borderline cases, like ordinary cases, are possibly interpreted as errors: "syntax", "value" or other...

Sequence of Parsing step: the sequence used in (and changed by) the 1st step is used in the 2nd step
 PARSE(S,L) ; PARSE(S,L)

Hierarchy of parsing step: the lexeme extracted in the 1st step becomes the sequence in the 2nd step
PARSE(S,LS); PARSE(LS,LL);
