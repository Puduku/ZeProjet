c-ansi/c-parse.topo
(c) Puduku - 2023

Goal: Handle ordinary parsings without excessive headaches...
Idea: give up distinction made a priori between syntactic and lexical analyses.
Principle: Parsing = hierarchical and sequential assemblage of elementary parsing steps

Parsing step is an elementary operation which extracts "head" lexeme of a sequence (of characters) 
PARSE(S,L) : 
 - S:sequence:
   + In: initial sequence
   + Out: remaining sequence after lexeme extraction
- L:lexeme:
  + out: lexeme extracted at the begin of the sequence

Notes:
 - Parsing step is, by essence, always a successful operation
 - Limit cases during which sequence and/or lexeme stay unchanged or get emptied are "remarkable" cases - not "error" cases
 - From these special cases, we may however decrete some global parsing failure ('syntax error' and so on.) 

Sequence of Parsing step: the sequence used in (and changed by) the 1st step is used in the 2nd step
 PARSE(S,L) ; PARSE(S,L)

Hierarchy of parsing step: the lexeme extracted in the 1st step becomes the sequence in the 2nd step
PARSE(S,LS); PARSE(LS,LL);
